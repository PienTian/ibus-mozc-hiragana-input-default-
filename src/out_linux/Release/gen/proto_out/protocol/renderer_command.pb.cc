// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol/renderer_command.proto

#include "protocol/renderer_command.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_protocol_2fcommands_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<12> scc_info_Output_protocol_2fcommands_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protocol_2frenderer_5fcommand_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<6> scc_info_RendererCommand_ApplicationInfo_protocol_2frenderer_5fcommand_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protocol_2frenderer_5fcommand_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_RendererCommand_CandidateForm_protocol_2frenderer_5fcommand_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protocol_2frenderer_5fcommand_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RendererCommand_CaretInfo_protocol_2frenderer_5fcommand_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protocol_2frenderer_5fcommand_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_RendererCommand_CharacterPosition_protocol_2frenderer_5fcommand_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protocol_2frenderer_5fcommand_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_RendererCommand_CompositionForm_protocol_2frenderer_5fcommand_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protocol_2frenderer_5fcommand_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RendererCommand_IndicatorInfo_protocol_2frenderer_5fcommand_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protocol_2frenderer_5fcommand_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RendererCommand_Point_protocol_2frenderer_5fcommand_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protocol_2frenderer_5fcommand_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RendererCommand_Rectangle_protocol_2frenderer_5fcommand_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protocol_2frenderer_5fcommand_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RendererCommand_WinLogFont_protocol_2frenderer_5fcommand_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protocol_2fcommands_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Status_protocol_2fcommands_2eproto;
namespace mozc {
namespace commands {
class RendererCommand_RectangleDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RendererCommand_Rectangle> _instance;
} _RendererCommand_Rectangle_default_instance_;
class RendererCommand_PointDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RendererCommand_Point> _instance;
} _RendererCommand_Point_default_instance_;
class RendererCommand_WinLogFontDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RendererCommand_WinLogFont> _instance;
} _RendererCommand_WinLogFont_default_instance_;
class RendererCommand_CompositionFormDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RendererCommand_CompositionForm> _instance;
} _RendererCommand_CompositionForm_default_instance_;
class RendererCommand_CandidateFormDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RendererCommand_CandidateForm> _instance;
} _RendererCommand_CandidateForm_default_instance_;
class RendererCommand_CharacterPositionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RendererCommand_CharacterPosition> _instance;
} _RendererCommand_CharacterPosition_default_instance_;
class RendererCommand_CaretInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RendererCommand_CaretInfo> _instance;
} _RendererCommand_CaretInfo_default_instance_;
class RendererCommand_IndicatorInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RendererCommand_IndicatorInfo> _instance;
} _RendererCommand_IndicatorInfo_default_instance_;
class RendererCommand_ApplicationInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RendererCommand_ApplicationInfo> _instance;
} _RendererCommand_ApplicationInfo_default_instance_;
class RendererCommandDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RendererCommand> _instance;
} _RendererCommand_default_instance_;
}  // namespace commands
}  // namespace mozc
static void InitDefaultsscc_info_RendererCommand_protocol_2frenderer_5fcommand_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mozc::commands::_RendererCommand_default_instance_;
    new (ptr) ::mozc::commands::RendererCommand();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mozc::commands::RendererCommand::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_RendererCommand_protocol_2frenderer_5fcommand_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_RendererCommand_protocol_2frenderer_5fcommand_2eproto}, {
      &scc_info_Output_protocol_2fcommands_2eproto.base,
      &scc_info_RendererCommand_Rectangle_protocol_2frenderer_5fcommand_2eproto.base,
      &scc_info_RendererCommand_ApplicationInfo_protocol_2frenderer_5fcommand_2eproto.base,}};

static void InitDefaultsscc_info_RendererCommand_ApplicationInfo_protocol_2frenderer_5fcommand_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mozc::commands::_RendererCommand_ApplicationInfo_default_instance_;
    new (ptr) ::mozc::commands::RendererCommand_ApplicationInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mozc::commands::RendererCommand_ApplicationInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<6> scc_info_RendererCommand_ApplicationInfo_protocol_2frenderer_5fcommand_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 6, 0, InitDefaultsscc_info_RendererCommand_ApplicationInfo_protocol_2frenderer_5fcommand_2eproto}, {
      &scc_info_RendererCommand_WinLogFont_protocol_2frenderer_5fcommand_2eproto.base,
      &scc_info_RendererCommand_CompositionForm_protocol_2frenderer_5fcommand_2eproto.base,
      &scc_info_RendererCommand_CandidateForm_protocol_2frenderer_5fcommand_2eproto.base,
      &scc_info_RendererCommand_CharacterPosition_protocol_2frenderer_5fcommand_2eproto.base,
      &scc_info_RendererCommand_CaretInfo_protocol_2frenderer_5fcommand_2eproto.base,
      &scc_info_RendererCommand_IndicatorInfo_protocol_2frenderer_5fcommand_2eproto.base,}};

static void InitDefaultsscc_info_RendererCommand_CandidateForm_protocol_2frenderer_5fcommand_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mozc::commands::_RendererCommand_CandidateForm_default_instance_;
    new (ptr) ::mozc::commands::RendererCommand_CandidateForm();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mozc::commands::RendererCommand_CandidateForm::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_RendererCommand_CandidateForm_protocol_2frenderer_5fcommand_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_RendererCommand_CandidateForm_protocol_2frenderer_5fcommand_2eproto}, {
      &scc_info_RendererCommand_Point_protocol_2frenderer_5fcommand_2eproto.base,
      &scc_info_RendererCommand_Rectangle_protocol_2frenderer_5fcommand_2eproto.base,}};

static void InitDefaultsscc_info_RendererCommand_CaretInfo_protocol_2frenderer_5fcommand_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mozc::commands::_RendererCommand_CaretInfo_default_instance_;
    new (ptr) ::mozc::commands::RendererCommand_CaretInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mozc::commands::RendererCommand_CaretInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RendererCommand_CaretInfo_protocol_2frenderer_5fcommand_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RendererCommand_CaretInfo_protocol_2frenderer_5fcommand_2eproto}, {
      &scc_info_RendererCommand_Rectangle_protocol_2frenderer_5fcommand_2eproto.base,}};

static void InitDefaultsscc_info_RendererCommand_CharacterPosition_protocol_2frenderer_5fcommand_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mozc::commands::_RendererCommand_CharacterPosition_default_instance_;
    new (ptr) ::mozc::commands::RendererCommand_CharacterPosition();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mozc::commands::RendererCommand_CharacterPosition::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_RendererCommand_CharacterPosition_protocol_2frenderer_5fcommand_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_RendererCommand_CharacterPosition_protocol_2frenderer_5fcommand_2eproto}, {
      &scc_info_RendererCommand_Point_protocol_2frenderer_5fcommand_2eproto.base,
      &scc_info_RendererCommand_Rectangle_protocol_2frenderer_5fcommand_2eproto.base,}};

static void InitDefaultsscc_info_RendererCommand_CompositionForm_protocol_2frenderer_5fcommand_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mozc::commands::_RendererCommand_CompositionForm_default_instance_;
    new (ptr) ::mozc::commands::RendererCommand_CompositionForm();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mozc::commands::RendererCommand_CompositionForm::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_RendererCommand_CompositionForm_protocol_2frenderer_5fcommand_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_RendererCommand_CompositionForm_protocol_2frenderer_5fcommand_2eproto}, {
      &scc_info_RendererCommand_Point_protocol_2frenderer_5fcommand_2eproto.base,
      &scc_info_RendererCommand_Rectangle_protocol_2frenderer_5fcommand_2eproto.base,}};

static void InitDefaultsscc_info_RendererCommand_IndicatorInfo_protocol_2frenderer_5fcommand_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mozc::commands::_RendererCommand_IndicatorInfo_default_instance_;
    new (ptr) ::mozc::commands::RendererCommand_IndicatorInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mozc::commands::RendererCommand_IndicatorInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RendererCommand_IndicatorInfo_protocol_2frenderer_5fcommand_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RendererCommand_IndicatorInfo_protocol_2frenderer_5fcommand_2eproto}, {
      &scc_info_Status_protocol_2fcommands_2eproto.base,}};

static void InitDefaultsscc_info_RendererCommand_Point_protocol_2frenderer_5fcommand_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mozc::commands::_RendererCommand_Point_default_instance_;
    new (ptr) ::mozc::commands::RendererCommand_Point();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mozc::commands::RendererCommand_Point::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RendererCommand_Point_protocol_2frenderer_5fcommand_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RendererCommand_Point_protocol_2frenderer_5fcommand_2eproto}, {}};

static void InitDefaultsscc_info_RendererCommand_Rectangle_protocol_2frenderer_5fcommand_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mozc::commands::_RendererCommand_Rectangle_default_instance_;
    new (ptr) ::mozc::commands::RendererCommand_Rectangle();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mozc::commands::RendererCommand_Rectangle::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RendererCommand_Rectangle_protocol_2frenderer_5fcommand_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RendererCommand_Rectangle_protocol_2frenderer_5fcommand_2eproto}, {}};

static void InitDefaultsscc_info_RendererCommand_WinLogFont_protocol_2frenderer_5fcommand_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mozc::commands::_RendererCommand_WinLogFont_default_instance_;
    new (ptr) ::mozc::commands::RendererCommand_WinLogFont();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mozc::commands::RendererCommand_WinLogFont::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RendererCommand_WinLogFont_protocol_2frenderer_5fcommand_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RendererCommand_WinLogFont_protocol_2frenderer_5fcommand_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_protocol_2frenderer_5fcommand_2eproto[10];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_protocol_2frenderer_5fcommand_2eproto[5];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_protocol_2frenderer_5fcommand_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_protocol_2frenderer_5fcommand_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_Rectangle, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_Rectangle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_Rectangle, left_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_Rectangle, top_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_Rectangle, right_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_Rectangle, bottom_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_Point, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_Point, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_Point, x_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_Point, y_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_WinLogFont, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_WinLogFont, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_WinLogFont, height_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_WinLogFont, width_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_WinLogFont, escapement_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_WinLogFont, orientation_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_WinLogFont, weight_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_WinLogFont, italic_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_WinLogFont, underline_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_WinLogFont, strike_out_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_WinLogFont, char_set_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_WinLogFont, out_precision_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_WinLogFont, clip_precision_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_WinLogFont, quality_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_WinLogFont, pitch_and_family_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_WinLogFont, face_name_),
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  13,
  9,
  10,
  11,
  12,
  0,
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_CompositionForm, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_CompositionForm, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_CompositionForm, current_position_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_CompositionForm, area_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_CompositionForm, style_bits_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_CandidateForm, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_CandidateForm, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_CandidateForm, current_position_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_CandidateForm, area_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_CandidateForm, style_bits_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_CharacterPosition, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_CharacterPosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_CharacterPosition, position_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_CharacterPosition, top_left_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_CharacterPosition, line_height_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_CharacterPosition, document_area_),
  2,
  0,
  3,
  1,
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_CaretInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_CaretInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_CaretInfo, blinking_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_CaretInfo, caret_rect_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_CaretInfo, target_window_handle_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_IndicatorInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_IndicatorInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_IndicatorInfo, status_),
  0,
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_ApplicationInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_ApplicationInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_ApplicationInfo, process_id_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_ApplicationInfo, thread_id_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_ApplicationInfo, receiver_handle_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_ApplicationInfo, target_window_handle_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_ApplicationInfo, composition_font_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_ApplicationInfo, input_framework_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_ApplicationInfo, composition_form_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_ApplicationInfo, candidate_form_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_ApplicationInfo, ui_visibilities_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_ApplicationInfo, composition_target_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_ApplicationInfo, caret_info_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_ApplicationInfo, pango_font_description_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand_ApplicationInfo, indicator_info_),
  7,
  8,
  9,
  10,
  1,
  11,
  2,
  3,
  12,
  4,
  5,
  0,
  6,
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand, type_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand, visible_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand, output_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand, preedit_rectangle_),
  PROTOBUF_FIELD_OFFSET(::mozc::commands::RendererCommand, application_info_),
  3,
  4,
  0,
  1,
  2,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::mozc::commands::RendererCommand_Rectangle)},
  { 13, 20, sizeof(::mozc::commands::RendererCommand_Point)},
  { 22, 41, sizeof(::mozc::commands::RendererCommand_WinLogFont)},
  { 55, 63, sizeof(::mozc::commands::RendererCommand_CompositionForm)},
  { 66, 74, sizeof(::mozc::commands::RendererCommand_CandidateForm)},
  { 77, 86, sizeof(::mozc::commands::RendererCommand_CharacterPosition)},
  { 90, 98, sizeof(::mozc::commands::RendererCommand_CaretInfo)},
  { 101, 107, sizeof(::mozc::commands::RendererCommand_IndicatorInfo)},
  { 108, 126, sizeof(::mozc::commands::RendererCommand_ApplicationInfo)},
  { 139, 149, sizeof(::mozc::commands::RendererCommand)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mozc::commands::_RendererCommand_Rectangle_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mozc::commands::_RendererCommand_Point_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mozc::commands::_RendererCommand_WinLogFont_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mozc::commands::_RendererCommand_CompositionForm_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mozc::commands::_RendererCommand_CandidateForm_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mozc::commands::_RendererCommand_CharacterPosition_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mozc::commands::_RendererCommand_CaretInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mozc::commands::_RendererCommand_IndicatorInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mozc::commands::_RendererCommand_ApplicationInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mozc::commands::_RendererCommand_default_instance_),
};

const char descriptor_table_protodef_protocol_2frenderer_5fcommand_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\037protocol/renderer_command.proto\022\rmozc."
  "commands\032\027protocol/commands.proto\"\357\023\n\017Re"
  "ndererCommand\022>\n\004type\030\001 \001(\0162*.mozc.comma"
  "nds.RendererCommand.CommandType:\004NOOP\022\026\n"
  "\007visible\030\002 \001(\010:\005false\022%\n\006output\030\003 \001(\0132\025."
  "mozc.commands.Output\022C\n\021preedit_rectangl"
  "e\030\004 \001(\0132(.mozc.commands.RendererCommand."
  "Rectangle\022H\n\020application_info\030\005 \001(\0132..mo"
  "zc.commands.RendererCommand.ApplicationI"
  "nfo\032E\n\tRectangle\022\014\n\004left\030\001 \001(\005\022\013\n\003top\030\002 "
  "\001(\005\022\r\n\005right\030\003 \001(\005\022\016\n\006bottom\030\004 \001(\005\032\035\n\005Po"
  "int\022\t\n\001x\030\001 \001(\005\022\t\n\001y\030\002 \001(\005\032\315\002\n\nWinLogFont"
  "\022\021\n\006height\030\001 \001(\005:\0010\022\020\n\005width\030\002 \001(\005:\0010\022\025\n"
  "\nescapement\030\003 \001(\005:\0010\022\026\n\013orientation\030\004 \001("
  "\005:\0010\022\021\n\006weight\030\005 \001(\005:\0010\022\025\n\006italic\030\006 \001(\010:"
  "\005false\022\030\n\tunderline\030\007 \001(\010:\005false\022\031\n\nstri"
  "ke_out\030\010 \001(\010:\005false\022\023\n\010char_set\030\t \001(\005:\0011"
  "\022\030\n\rout_precision\030\n \001(\005:\0010\022\031\n\016clip_preci"
  "sion\030\013 \001(\005:\0010\022\022\n\007quality\030\014 \001(\005:\0010\022\033\n\020pit"
  "ch_and_family\030\r \001(\005:\0010\022\021\n\tface_name\030\016 \001("
  "\t\032\354\001\n\017CompositionForm\022>\n\020current_positio"
  "n\030\002 \001(\0132$.mozc.commands.RendererCommand."
  "Point\0226\n\004area\030\003 \001(\0132(.mozc.commands.Rend"
  "ererCommand.Rectangle\022\025\n\nstyle_bits\030\004 \001("
  "\r:\0010\"=\n\005Style\022\013\n\007DEFAULT\020\000\022\010\n\004RECT\020\001\022\t\n\005"
  "POINT\020\002\022\022\n\016FORCE_POSITION\020 J\004\010\001\020\002R\005style"
  "\032\341\001\n\rCandidateForm\022>\n\020current_position\030\002"
  " \001(\0132$.mozc.commands.RendererCommand.Poi"
  "nt\0226\n\004area\030\003 \001(\0132(.mozc.commands.Rendere"
  "rCommand.Rectangle\022\025\n\nstyle_bits\030\004 \001(\r:\001"
  "0\"4\n\005Style\022\013\n\007DEFAULT\020\000\022\020\n\014CANDIDATEPOS\020"
  "@\022\014\n\007EXCLUDE\020\200\001J\004\010\001\020\002R\005style\032\263\001\n\021Charact"
  "erPosition\022\020\n\010position\030\001 \001(\r\0226\n\010top_left"
  "\030\002 \001(\0132$.mozc.commands.RendererCommand.P"
  "oint\022\023\n\013line_height\030\003 \001(\r\022\?\n\rdocument_ar"
  "ea\030\004 \001(\0132(.mozc.commands.RendererCommand"
  ".Rectangle\032\200\001\n\tCaretInfo\022\027\n\010blinking\030\001 \001"
  "(\010:\005false\022<\n\ncaret_rect\030\002 \001(\0132(.mozc.com"
  "mands.RendererCommand.Rectangle\022\034\n\024targe"
  "t_window_handle\030\003 \001(\r\0326\n\rIndicatorInfo\022%"
  "\n\006status\030\001 \001(\0132\025.mozc.commands.Status\032\240\007"
  "\n\017ApplicationInfo\022\022\n\nprocess_id\030\001 \001(\r\022\021\n"
  "\tthread_id\030\002 \001(\r\022\027\n\017receiver_handle\030\003 \001("
  "\r\022\034\n\024target_window_handle\030\004 \001(\r\022C\n\020compo"
  "sition_font\030\005 \001(\0132).mozc.commands.Render"
  "erCommand.WinLogFont\022m\n\017input_framework\030"
  "\006 \001(\0162A.mozc.commands.RendererCommand.Ap"
  "plicationInfo.InputFrameworkType:\021UNKNOW"
  "N_FRAMEWORK\022H\n\020composition_form\030\007 \001(\0132.."
  "mozc.commands.RendererCommand.Compositio"
  "nForm\022D\n\016candidate_form\030\010 \001(\0132,.mozc.com"
  "mands.RendererCommand.CandidateForm\022\032\n\017u"
  "i_visibilities\030\t \001(\005:\0010\022L\n\022composition_t"
  "arget\030\n \001(\01320.mozc.commands.RendererComm"
  "and.CharacterPosition\022<\n\ncaret_info\030\013 \001("
  "\0132(.mozc.commands.RendererCommand.CaretI"
  "nfo\022\036\n\026pango_font_description\030\r \001(\t\022D\n\016i"
  "ndicator_info\030\016 \001(\0132,.mozc.commands.Rend"
  "ererCommand.IndicatorInfo\"T\n\022InputFramew"
  "orkType\022\025\n\021UNKNOWN_FRAMEWORK\020\000\022\007\n\003TSF\020\001\022"
  "\t\n\005IMM32\020\002\022\t\n\005IMKit\020\003\022\010\n\004IBus\020\004\"l\n\014UIVis"
  "ibility\022\021\n\rShowUIDefault\020\000\022\031\n\025ShowCompos"
  "itionWindow\020\001\022\027\n\023ShowCandidateWindow\020\002\022\025"
  "\n\021ShowSuggestWindow\020\004J\004\010\014\020\rR\023message_sen"
  "der_type\"1\n\013CommandType\022\010\n\004NOOP\020\000\022\n\n\006UPD"
  "ATE\020\001\022\014\n\010SHUTDOWN\020\002"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_protocol_2frenderer_5fcommand_2eproto_deps[1] = {
  &::descriptor_table_protocol_2fcommands_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_protocol_2frenderer_5fcommand_2eproto_sccs[10] = {
  &scc_info_RendererCommand_protocol_2frenderer_5fcommand_2eproto.base,
  &scc_info_RendererCommand_ApplicationInfo_protocol_2frenderer_5fcommand_2eproto.base,
  &scc_info_RendererCommand_CandidateForm_protocol_2frenderer_5fcommand_2eproto.base,
  &scc_info_RendererCommand_CaretInfo_protocol_2frenderer_5fcommand_2eproto.base,
  &scc_info_RendererCommand_CharacterPosition_protocol_2frenderer_5fcommand_2eproto.base,
  &scc_info_RendererCommand_CompositionForm_protocol_2frenderer_5fcommand_2eproto.base,
  &scc_info_RendererCommand_IndicatorInfo_protocol_2frenderer_5fcommand_2eproto.base,
  &scc_info_RendererCommand_Point_protocol_2frenderer_5fcommand_2eproto.base,
  &scc_info_RendererCommand_Rectangle_protocol_2frenderer_5fcommand_2eproto.base,
  &scc_info_RendererCommand_WinLogFont_protocol_2frenderer_5fcommand_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_protocol_2frenderer_5fcommand_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_protocol_2frenderer_5fcommand_2eproto = {
  false, false, descriptor_table_protodef_protocol_2frenderer_5fcommand_2eproto, "protocol/renderer_command.proto", 2619,
  &descriptor_table_protocol_2frenderer_5fcommand_2eproto_once, descriptor_table_protocol_2frenderer_5fcommand_2eproto_sccs, descriptor_table_protocol_2frenderer_5fcommand_2eproto_deps, 10, 1,
  schemas, file_default_instances, TableStruct_protocol_2frenderer_5fcommand_2eproto::offsets,
  file_level_metadata_protocol_2frenderer_5fcommand_2eproto, 10, file_level_enum_descriptors_protocol_2frenderer_5fcommand_2eproto, file_level_service_descriptors_protocol_2frenderer_5fcommand_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_protocol_2frenderer_5fcommand_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_protocol_2frenderer_5fcommand_2eproto)), true);
namespace mozc {
namespace commands {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* RendererCommand_CompositionForm_Style_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_protocol_2frenderer_5fcommand_2eproto);
  return file_level_enum_descriptors_protocol_2frenderer_5fcommand_2eproto[0];
}
bool RendererCommand_CompositionForm_Style_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 32:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr RendererCommand_CompositionForm_Style RendererCommand_CompositionForm::DEFAULT;
constexpr RendererCommand_CompositionForm_Style RendererCommand_CompositionForm::RECT;
constexpr RendererCommand_CompositionForm_Style RendererCommand_CompositionForm::POINT;
constexpr RendererCommand_CompositionForm_Style RendererCommand_CompositionForm::FORCE_POSITION;
constexpr RendererCommand_CompositionForm_Style RendererCommand_CompositionForm::Style_MIN;
constexpr RendererCommand_CompositionForm_Style RendererCommand_CompositionForm::Style_MAX;
constexpr int RendererCommand_CompositionForm::Style_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* RendererCommand_CandidateForm_Style_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_protocol_2frenderer_5fcommand_2eproto);
  return file_level_enum_descriptors_protocol_2frenderer_5fcommand_2eproto[1];
}
bool RendererCommand_CandidateForm_Style_IsValid(int value) {
  switch (value) {
    case 0:
    case 64:
    case 128:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr RendererCommand_CandidateForm_Style RendererCommand_CandidateForm::DEFAULT;
constexpr RendererCommand_CandidateForm_Style RendererCommand_CandidateForm::CANDIDATEPOS;
constexpr RendererCommand_CandidateForm_Style RendererCommand_CandidateForm::EXCLUDE;
constexpr RendererCommand_CandidateForm_Style RendererCommand_CandidateForm::Style_MIN;
constexpr RendererCommand_CandidateForm_Style RendererCommand_CandidateForm::Style_MAX;
constexpr int RendererCommand_CandidateForm::Style_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* RendererCommand_ApplicationInfo_InputFrameworkType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_protocol_2frenderer_5fcommand_2eproto);
  return file_level_enum_descriptors_protocol_2frenderer_5fcommand_2eproto[2];
}
bool RendererCommand_ApplicationInfo_InputFrameworkType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr RendererCommand_ApplicationInfo_InputFrameworkType RendererCommand_ApplicationInfo::UNKNOWN_FRAMEWORK;
constexpr RendererCommand_ApplicationInfo_InputFrameworkType RendererCommand_ApplicationInfo::TSF;
constexpr RendererCommand_ApplicationInfo_InputFrameworkType RendererCommand_ApplicationInfo::IMM32;
constexpr RendererCommand_ApplicationInfo_InputFrameworkType RendererCommand_ApplicationInfo::IMKit;
constexpr RendererCommand_ApplicationInfo_InputFrameworkType RendererCommand_ApplicationInfo::IBus;
constexpr RendererCommand_ApplicationInfo_InputFrameworkType RendererCommand_ApplicationInfo::InputFrameworkType_MIN;
constexpr RendererCommand_ApplicationInfo_InputFrameworkType RendererCommand_ApplicationInfo::InputFrameworkType_MAX;
constexpr int RendererCommand_ApplicationInfo::InputFrameworkType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* RendererCommand_ApplicationInfo_UIVisibility_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_protocol_2frenderer_5fcommand_2eproto);
  return file_level_enum_descriptors_protocol_2frenderer_5fcommand_2eproto[3];
}
bool RendererCommand_ApplicationInfo_UIVisibility_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr RendererCommand_ApplicationInfo_UIVisibility RendererCommand_ApplicationInfo::ShowUIDefault;
constexpr RendererCommand_ApplicationInfo_UIVisibility RendererCommand_ApplicationInfo::ShowCompositionWindow;
constexpr RendererCommand_ApplicationInfo_UIVisibility RendererCommand_ApplicationInfo::ShowCandidateWindow;
constexpr RendererCommand_ApplicationInfo_UIVisibility RendererCommand_ApplicationInfo::ShowSuggestWindow;
constexpr RendererCommand_ApplicationInfo_UIVisibility RendererCommand_ApplicationInfo::UIVisibility_MIN;
constexpr RendererCommand_ApplicationInfo_UIVisibility RendererCommand_ApplicationInfo::UIVisibility_MAX;
constexpr int RendererCommand_ApplicationInfo::UIVisibility_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* RendererCommand_CommandType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_protocol_2frenderer_5fcommand_2eproto);
  return file_level_enum_descriptors_protocol_2frenderer_5fcommand_2eproto[4];
}
bool RendererCommand_CommandType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr RendererCommand_CommandType RendererCommand::NOOP;
constexpr RendererCommand_CommandType RendererCommand::UPDATE;
constexpr RendererCommand_CommandType RendererCommand::SHUTDOWN;
constexpr RendererCommand_CommandType RendererCommand::CommandType_MIN;
constexpr RendererCommand_CommandType RendererCommand::CommandType_MAX;
constexpr int RendererCommand::CommandType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void RendererCommand_Rectangle::InitAsDefaultInstance() {
}
class RendererCommand_Rectangle::_Internal {
 public:
  using HasBits = decltype(std::declval<RendererCommand_Rectangle>()._has_bits_);
  static void set_has_left(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_top(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_right(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_bottom(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

RendererCommand_Rectangle::RendererCommand_Rectangle(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mozc.commands.RendererCommand.Rectangle)
}
RendererCommand_Rectangle::RendererCommand_Rectangle(const RendererCommand_Rectangle& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&left_, &from.left_,
    static_cast<size_t>(reinterpret_cast<char*>(&bottom_) -
    reinterpret_cast<char*>(&left_)) + sizeof(bottom_));
  // @@protoc_insertion_point(copy_constructor:mozc.commands.RendererCommand.Rectangle)
}

void RendererCommand_Rectangle::SharedCtor() {
  ::memset(&left_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bottom_) -
      reinterpret_cast<char*>(&left_)) + sizeof(bottom_));
}

RendererCommand_Rectangle::~RendererCommand_Rectangle() {
  // @@protoc_insertion_point(destructor:mozc.commands.RendererCommand.Rectangle)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RendererCommand_Rectangle::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RendererCommand_Rectangle::ArenaDtor(void* object) {
  RendererCommand_Rectangle* _this = reinterpret_cast< RendererCommand_Rectangle* >(object);
  (void)_this;
}
void RendererCommand_Rectangle::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RendererCommand_Rectangle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RendererCommand_Rectangle& RendererCommand_Rectangle::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RendererCommand_Rectangle_protocol_2frenderer_5fcommand_2eproto.base);
  return *internal_default_instance();
}


void RendererCommand_Rectangle::Clear() {
// @@protoc_insertion_point(message_clear_start:mozc.commands.RendererCommand.Rectangle)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&left_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bottom_) -
        reinterpret_cast<char*>(&left_)) + sizeof(bottom_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RendererCommand_Rectangle::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 left = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_left(&has_bits);
          left_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 top = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_top(&has_bits);
          top_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 right = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_right(&has_bits);
          right_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 bottom = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_bottom(&has_bits);
          bottom_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RendererCommand_Rectangle::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mozc.commands.RendererCommand.Rectangle)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 left = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_left(), target);
  }

  // optional int32 top = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_top(), target);
  }

  // optional int32 right = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_right(), target);
  }

  // optional int32 bottom = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_bottom(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mozc.commands.RendererCommand.Rectangle)
  return target;
}

size_t RendererCommand_Rectangle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mozc.commands.RendererCommand.Rectangle)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional int32 left = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_left());
    }

    // optional int32 top = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_top());
    }

    // optional int32 right = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_right());
    }

    // optional int32 bottom = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_bottom());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RendererCommand_Rectangle::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mozc.commands.RendererCommand.Rectangle)
  GOOGLE_DCHECK_NE(&from, this);
  const RendererCommand_Rectangle* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RendererCommand_Rectangle>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mozc.commands.RendererCommand.Rectangle)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mozc.commands.RendererCommand.Rectangle)
    MergeFrom(*source);
  }
}

void RendererCommand_Rectangle::MergeFrom(const RendererCommand_Rectangle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mozc.commands.RendererCommand.Rectangle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      left_ = from.left_;
    }
    if (cached_has_bits & 0x00000002u) {
      top_ = from.top_;
    }
    if (cached_has_bits & 0x00000004u) {
      right_ = from.right_;
    }
    if (cached_has_bits & 0x00000008u) {
      bottom_ = from.bottom_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RendererCommand_Rectangle::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mozc.commands.RendererCommand.Rectangle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RendererCommand_Rectangle::CopyFrom(const RendererCommand_Rectangle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mozc.commands.RendererCommand.Rectangle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RendererCommand_Rectangle::IsInitialized() const {
  return true;
}

void RendererCommand_Rectangle::InternalSwap(RendererCommand_Rectangle* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RendererCommand_Rectangle, bottom_)
      + sizeof(RendererCommand_Rectangle::bottom_)
      - PROTOBUF_FIELD_OFFSET(RendererCommand_Rectangle, left_)>(
          reinterpret_cast<char*>(&left_),
          reinterpret_cast<char*>(&other->left_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RendererCommand_Rectangle::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RendererCommand_Point::InitAsDefaultInstance() {
}
class RendererCommand_Point::_Internal {
 public:
  using HasBits = decltype(std::declval<RendererCommand_Point>()._has_bits_);
  static void set_has_x(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_y(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

RendererCommand_Point::RendererCommand_Point(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mozc.commands.RendererCommand.Point)
}
RendererCommand_Point::RendererCommand_Point(const RendererCommand_Point& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:mozc.commands.RendererCommand.Point)
}

void RendererCommand_Point::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
}

RendererCommand_Point::~RendererCommand_Point() {
  // @@protoc_insertion_point(destructor:mozc.commands.RendererCommand.Point)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RendererCommand_Point::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RendererCommand_Point::ArenaDtor(void* object) {
  RendererCommand_Point* _this = reinterpret_cast< RendererCommand_Point* >(object);
  (void)_this;
}
void RendererCommand_Point::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RendererCommand_Point::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RendererCommand_Point& RendererCommand_Point::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RendererCommand_Point_protocol_2frenderer_5fcommand_2eproto.base);
  return *internal_default_instance();
}


void RendererCommand_Point::Clear() {
// @@protoc_insertion_point(message_clear_start:mozc.commands.RendererCommand.Point)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&y_) -
        reinterpret_cast<char*>(&x_)) + sizeof(y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RendererCommand_Point::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 x = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_x(&has_bits);
          x_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 y = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_y(&has_bits);
          y_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RendererCommand_Point::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mozc.commands.RendererCommand.Point)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_x(), target);
  }

  // optional int32 y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_y(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mozc.commands.RendererCommand.Point)
  return target;
}

size_t RendererCommand_Point::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mozc.commands.RendererCommand.Point)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 x = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_x());
    }

    // optional int32 y = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_y());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RendererCommand_Point::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mozc.commands.RendererCommand.Point)
  GOOGLE_DCHECK_NE(&from, this);
  const RendererCommand_Point* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RendererCommand_Point>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mozc.commands.RendererCommand.Point)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mozc.commands.RendererCommand.Point)
    MergeFrom(*source);
  }
}

void RendererCommand_Point::MergeFrom(const RendererCommand_Point& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mozc.commands.RendererCommand.Point)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RendererCommand_Point::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mozc.commands.RendererCommand.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RendererCommand_Point::CopyFrom(const RendererCommand_Point& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mozc.commands.RendererCommand.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RendererCommand_Point::IsInitialized() const {
  return true;
}

void RendererCommand_Point::InternalSwap(RendererCommand_Point* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RendererCommand_Point, y_)
      + sizeof(RendererCommand_Point::y_)
      - PROTOBUF_FIELD_OFFSET(RendererCommand_Point, x_)>(
          reinterpret_cast<char*>(&x_),
          reinterpret_cast<char*>(&other->x_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RendererCommand_Point::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RendererCommand_WinLogFont::InitAsDefaultInstance() {
}
class RendererCommand_WinLogFont::_Internal {
 public:
  using HasBits = decltype(std::declval<RendererCommand_WinLogFont>()._has_bits_);
  static void set_has_height(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_width(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_escapement(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_orientation(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_weight(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_italic(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_underline(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_strike_out(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_char_set(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_out_precision(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_clip_precision(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_quality(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_pitch_and_family(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_face_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

RendererCommand_WinLogFont::RendererCommand_WinLogFont(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mozc.commands.RendererCommand.WinLogFont)
}
RendererCommand_WinLogFont::RendererCommand_WinLogFont(const RendererCommand_WinLogFont& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  face_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_face_name()) {
    face_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_face_name(),
      GetArena());
  }
  ::memcpy(&height_, &from.height_,
    static_cast<size_t>(reinterpret_cast<char*>(&char_set_) -
    reinterpret_cast<char*>(&height_)) + sizeof(char_set_));
  // @@protoc_insertion_point(copy_constructor:mozc.commands.RendererCommand.WinLogFont)
}

void RendererCommand_WinLogFont::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RendererCommand_WinLogFont_protocol_2frenderer_5fcommand_2eproto.base);
  face_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&height_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pitch_and_family_) -
      reinterpret_cast<char*>(&height_)) + sizeof(pitch_and_family_));
  char_set_ = 1;
}

RendererCommand_WinLogFont::~RendererCommand_WinLogFont() {
  // @@protoc_insertion_point(destructor:mozc.commands.RendererCommand.WinLogFont)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RendererCommand_WinLogFont::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  face_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RendererCommand_WinLogFont::ArenaDtor(void* object) {
  RendererCommand_WinLogFont* _this = reinterpret_cast< RendererCommand_WinLogFont* >(object);
  (void)_this;
}
void RendererCommand_WinLogFont::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RendererCommand_WinLogFont::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RendererCommand_WinLogFont& RendererCommand_WinLogFont::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RendererCommand_WinLogFont_protocol_2frenderer_5fcommand_2eproto.base);
  return *internal_default_instance();
}


void RendererCommand_WinLogFont::Clear() {
// @@protoc_insertion_point(message_clear_start:mozc.commands.RendererCommand.WinLogFont)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    face_name_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x000000feu) {
    ::memset(&height_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&underline_) -
        reinterpret_cast<char*>(&height_)) + sizeof(underline_));
  }
  if (cached_has_bits & 0x00003f00u) {
    ::memset(&strike_out_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pitch_and_family_) -
        reinterpret_cast<char*>(&strike_out_)) + sizeof(pitch_and_family_));
    char_set_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RendererCommand_WinLogFont::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 height = 1 [default = 0];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_height(&has_bits);
          height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 width = 2 [default = 0];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_width(&has_bits);
          width_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 escapement = 3 [default = 0];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_escapement(&has_bits);
          escapement_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 orientation = 4 [default = 0];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_orientation(&has_bits);
          orientation_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 weight = 5 [default = 0];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_weight(&has_bits);
          weight_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool italic = 6 [default = false];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_italic(&has_bits);
          italic_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool underline = 7 [default = false];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_underline(&has_bits);
          underline_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool strike_out = 8 [default = false];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_strike_out(&has_bits);
          strike_out_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 char_set = 9 [default = 1];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          _Internal::set_has_char_set(&has_bits);
          char_set_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 out_precision = 10 [default = 0];
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_out_precision(&has_bits);
          out_precision_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 clip_precision = 11 [default = 0];
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          _Internal::set_has_clip_precision(&has_bits);
          clip_precision_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 quality = 12 [default = 0];
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_quality(&has_bits);
          quality_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 pitch_and_family = 13 [default = 0];
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          _Internal::set_has_pitch_and_family(&has_bits);
          pitch_and_family_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string face_name = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          auto str = _internal_mutable_face_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mozc.commands.RendererCommand.WinLogFont.face_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RendererCommand_WinLogFont::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mozc.commands.RendererCommand.WinLogFont)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 height = 1 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_height(), target);
  }

  // optional int32 width = 2 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_width(), target);
  }

  // optional int32 escapement = 3 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_escapement(), target);
  }

  // optional int32 orientation = 4 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_orientation(), target);
  }

  // optional int32 weight = 5 [default = 0];
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_weight(), target);
  }

  // optional bool italic = 6 [default = false];
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->_internal_italic(), target);
  }

  // optional bool underline = 7 [default = false];
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(7, this->_internal_underline(), target);
  }

  // optional bool strike_out = 8 [default = false];
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(8, this->_internal_strike_out(), target);
  }

  // optional int32 char_set = 9 [default = 1];
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(9, this->_internal_char_set(), target);
  }

  // optional int32 out_precision = 10 [default = 0];
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(10, this->_internal_out_precision(), target);
  }

  // optional int32 clip_precision = 11 [default = 0];
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(11, this->_internal_clip_precision(), target);
  }

  // optional int32 quality = 12 [default = 0];
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(12, this->_internal_quality(), target);
  }

  // optional int32 pitch_and_family = 13 [default = 0];
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(13, this->_internal_pitch_and_family(), target);
  }

  // optional string face_name = 14;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_face_name().data(), static_cast<int>(this->_internal_face_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "mozc.commands.RendererCommand.WinLogFont.face_name");
    target = stream->WriteStringMaybeAliased(
        14, this->_internal_face_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mozc.commands.RendererCommand.WinLogFont)
  return target;
}

size_t RendererCommand_WinLogFont::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mozc.commands.RendererCommand.WinLogFont)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string face_name = 14;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_face_name());
    }

    // optional int32 height = 1 [default = 0];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_height());
    }

    // optional int32 width = 2 [default = 0];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_width());
    }

    // optional int32 escapement = 3 [default = 0];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_escapement());
    }

    // optional int32 orientation = 4 [default = 0];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_orientation());
    }

    // optional int32 weight = 5 [default = 0];
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_weight());
    }

    // optional bool italic = 6 [default = false];
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + 1;
    }

    // optional bool underline = 7 [default = false];
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 + 1;
    }

  }
  if (cached_has_bits & 0x00003f00u) {
    // optional bool strike_out = 8 [default = false];
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 + 1;
    }

    // optional int32 out_precision = 10 [default = 0];
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_out_precision());
    }

    // optional int32 clip_precision = 11 [default = 0];
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_clip_precision());
    }

    // optional int32 quality = 12 [default = 0];
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_quality());
    }

    // optional int32 pitch_and_family = 13 [default = 0];
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_pitch_and_family());
    }

    // optional int32 char_set = 9 [default = 1];
    if (cached_has_bits & 0x00002000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_char_set());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RendererCommand_WinLogFont::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mozc.commands.RendererCommand.WinLogFont)
  GOOGLE_DCHECK_NE(&from, this);
  const RendererCommand_WinLogFont* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RendererCommand_WinLogFont>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mozc.commands.RendererCommand.WinLogFont)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mozc.commands.RendererCommand.WinLogFont)
    MergeFrom(*source);
  }
}

void RendererCommand_WinLogFont::MergeFrom(const RendererCommand_WinLogFont& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mozc.commands.RendererCommand.WinLogFont)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_face_name(from._internal_face_name());
    }
    if (cached_has_bits & 0x00000002u) {
      height_ = from.height_;
    }
    if (cached_has_bits & 0x00000004u) {
      width_ = from.width_;
    }
    if (cached_has_bits & 0x00000008u) {
      escapement_ = from.escapement_;
    }
    if (cached_has_bits & 0x00000010u) {
      orientation_ = from.orientation_;
    }
    if (cached_has_bits & 0x00000020u) {
      weight_ = from.weight_;
    }
    if (cached_has_bits & 0x00000040u) {
      italic_ = from.italic_;
    }
    if (cached_has_bits & 0x00000080u) {
      underline_ = from.underline_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00003f00u) {
    if (cached_has_bits & 0x00000100u) {
      strike_out_ = from.strike_out_;
    }
    if (cached_has_bits & 0x00000200u) {
      out_precision_ = from.out_precision_;
    }
    if (cached_has_bits & 0x00000400u) {
      clip_precision_ = from.clip_precision_;
    }
    if (cached_has_bits & 0x00000800u) {
      quality_ = from.quality_;
    }
    if (cached_has_bits & 0x00001000u) {
      pitch_and_family_ = from.pitch_and_family_;
    }
    if (cached_has_bits & 0x00002000u) {
      char_set_ = from.char_set_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RendererCommand_WinLogFont::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mozc.commands.RendererCommand.WinLogFont)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RendererCommand_WinLogFont::CopyFrom(const RendererCommand_WinLogFont& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mozc.commands.RendererCommand.WinLogFont)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RendererCommand_WinLogFont::IsInitialized() const {
  return true;
}

void RendererCommand_WinLogFont::InternalSwap(RendererCommand_WinLogFont* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  face_name_.Swap(&other->face_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RendererCommand_WinLogFont, pitch_and_family_)
      + sizeof(RendererCommand_WinLogFont::pitch_and_family_)
      - PROTOBUF_FIELD_OFFSET(RendererCommand_WinLogFont, height_)>(
          reinterpret_cast<char*>(&height_),
          reinterpret_cast<char*>(&other->height_));
  swap(char_set_, other->char_set_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RendererCommand_WinLogFont::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RendererCommand_CompositionForm::InitAsDefaultInstance() {
  ::mozc::commands::_RendererCommand_CompositionForm_default_instance_._instance.get_mutable()->current_position_ = const_cast< ::mozc::commands::RendererCommand_Point*>(
      ::mozc::commands::RendererCommand_Point::internal_default_instance());
  ::mozc::commands::_RendererCommand_CompositionForm_default_instance_._instance.get_mutable()->area_ = const_cast< ::mozc::commands::RendererCommand_Rectangle*>(
      ::mozc::commands::RendererCommand_Rectangle::internal_default_instance());
}
class RendererCommand_CompositionForm::_Internal {
 public:
  using HasBits = decltype(std::declval<RendererCommand_CompositionForm>()._has_bits_);
  static const ::mozc::commands::RendererCommand_Point& current_position(const RendererCommand_CompositionForm* msg);
  static void set_has_current_position(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::mozc::commands::RendererCommand_Rectangle& area(const RendererCommand_CompositionForm* msg);
  static void set_has_area(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_style_bits(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::mozc::commands::RendererCommand_Point&
RendererCommand_CompositionForm::_Internal::current_position(const RendererCommand_CompositionForm* msg) {
  return *msg->current_position_;
}
const ::mozc::commands::RendererCommand_Rectangle&
RendererCommand_CompositionForm::_Internal::area(const RendererCommand_CompositionForm* msg) {
  return *msg->area_;
}
RendererCommand_CompositionForm::RendererCommand_CompositionForm(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mozc.commands.RendererCommand.CompositionForm)
}
RendererCommand_CompositionForm::RendererCommand_CompositionForm(const RendererCommand_CompositionForm& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_current_position()) {
    current_position_ = new ::mozc::commands::RendererCommand_Point(*from.current_position_);
  } else {
    current_position_ = nullptr;
  }
  if (from._internal_has_area()) {
    area_ = new ::mozc::commands::RendererCommand_Rectangle(*from.area_);
  } else {
    area_ = nullptr;
  }
  style_bits_ = from.style_bits_;
  // @@protoc_insertion_point(copy_constructor:mozc.commands.RendererCommand.CompositionForm)
}

void RendererCommand_CompositionForm::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RendererCommand_CompositionForm_protocol_2frenderer_5fcommand_2eproto.base);
  ::memset(&current_position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&style_bits_) -
      reinterpret_cast<char*>(&current_position_)) + sizeof(style_bits_));
}

RendererCommand_CompositionForm::~RendererCommand_CompositionForm() {
  // @@protoc_insertion_point(destructor:mozc.commands.RendererCommand.CompositionForm)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RendererCommand_CompositionForm::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete current_position_;
  if (this != internal_default_instance()) delete area_;
}

void RendererCommand_CompositionForm::ArenaDtor(void* object) {
  RendererCommand_CompositionForm* _this = reinterpret_cast< RendererCommand_CompositionForm* >(object);
  (void)_this;
}
void RendererCommand_CompositionForm::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RendererCommand_CompositionForm::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RendererCommand_CompositionForm& RendererCommand_CompositionForm::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RendererCommand_CompositionForm_protocol_2frenderer_5fcommand_2eproto.base);
  return *internal_default_instance();
}


void RendererCommand_CompositionForm::Clear() {
// @@protoc_insertion_point(message_clear_start:mozc.commands.RendererCommand.CompositionForm)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(current_position_ != nullptr);
      current_position_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(area_ != nullptr);
      area_->Clear();
    }
  }
  style_bits_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RendererCommand_CompositionForm::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .mozc.commands.RendererCommand.Point current_position = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_current_position(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .mozc.commands.RendererCommand.Rectangle area = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_area(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 style_bits = 4 [default = 0];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_style_bits(&has_bits);
          style_bits_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RendererCommand_CompositionForm::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mozc.commands.RendererCommand.CompositionForm)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .mozc.commands.RendererCommand.Point current_position = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::current_position(this), target, stream);
  }

  // optional .mozc.commands.RendererCommand.Rectangle area = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::area(this), target, stream);
  }

  // optional uint32 style_bits = 4 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_style_bits(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mozc.commands.RendererCommand.CompositionForm)
  return target;
}

size_t RendererCommand_CompositionForm::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mozc.commands.RendererCommand.CompositionForm)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .mozc.commands.RendererCommand.Point current_position = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *current_position_);
    }

    // optional .mozc.commands.RendererCommand.Rectangle area = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *area_);
    }

    // optional uint32 style_bits = 4 [default = 0];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_style_bits());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RendererCommand_CompositionForm::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mozc.commands.RendererCommand.CompositionForm)
  GOOGLE_DCHECK_NE(&from, this);
  const RendererCommand_CompositionForm* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RendererCommand_CompositionForm>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mozc.commands.RendererCommand.CompositionForm)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mozc.commands.RendererCommand.CompositionForm)
    MergeFrom(*source);
  }
}

void RendererCommand_CompositionForm::MergeFrom(const RendererCommand_CompositionForm& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mozc.commands.RendererCommand.CompositionForm)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_current_position()->::mozc::commands::RendererCommand_Point::MergeFrom(from._internal_current_position());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_area()->::mozc::commands::RendererCommand_Rectangle::MergeFrom(from._internal_area());
    }
    if (cached_has_bits & 0x00000004u) {
      style_bits_ = from.style_bits_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RendererCommand_CompositionForm::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mozc.commands.RendererCommand.CompositionForm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RendererCommand_CompositionForm::CopyFrom(const RendererCommand_CompositionForm& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mozc.commands.RendererCommand.CompositionForm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RendererCommand_CompositionForm::IsInitialized() const {
  return true;
}

void RendererCommand_CompositionForm::InternalSwap(RendererCommand_CompositionForm* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RendererCommand_CompositionForm, style_bits_)
      + sizeof(RendererCommand_CompositionForm::style_bits_)
      - PROTOBUF_FIELD_OFFSET(RendererCommand_CompositionForm, current_position_)>(
          reinterpret_cast<char*>(&current_position_),
          reinterpret_cast<char*>(&other->current_position_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RendererCommand_CompositionForm::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RendererCommand_CandidateForm::InitAsDefaultInstance() {
  ::mozc::commands::_RendererCommand_CandidateForm_default_instance_._instance.get_mutable()->current_position_ = const_cast< ::mozc::commands::RendererCommand_Point*>(
      ::mozc::commands::RendererCommand_Point::internal_default_instance());
  ::mozc::commands::_RendererCommand_CandidateForm_default_instance_._instance.get_mutable()->area_ = const_cast< ::mozc::commands::RendererCommand_Rectangle*>(
      ::mozc::commands::RendererCommand_Rectangle::internal_default_instance());
}
class RendererCommand_CandidateForm::_Internal {
 public:
  using HasBits = decltype(std::declval<RendererCommand_CandidateForm>()._has_bits_);
  static const ::mozc::commands::RendererCommand_Point& current_position(const RendererCommand_CandidateForm* msg);
  static void set_has_current_position(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::mozc::commands::RendererCommand_Rectangle& area(const RendererCommand_CandidateForm* msg);
  static void set_has_area(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_style_bits(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::mozc::commands::RendererCommand_Point&
RendererCommand_CandidateForm::_Internal::current_position(const RendererCommand_CandidateForm* msg) {
  return *msg->current_position_;
}
const ::mozc::commands::RendererCommand_Rectangle&
RendererCommand_CandidateForm::_Internal::area(const RendererCommand_CandidateForm* msg) {
  return *msg->area_;
}
RendererCommand_CandidateForm::RendererCommand_CandidateForm(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mozc.commands.RendererCommand.CandidateForm)
}
RendererCommand_CandidateForm::RendererCommand_CandidateForm(const RendererCommand_CandidateForm& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_current_position()) {
    current_position_ = new ::mozc::commands::RendererCommand_Point(*from.current_position_);
  } else {
    current_position_ = nullptr;
  }
  if (from._internal_has_area()) {
    area_ = new ::mozc::commands::RendererCommand_Rectangle(*from.area_);
  } else {
    area_ = nullptr;
  }
  style_bits_ = from.style_bits_;
  // @@protoc_insertion_point(copy_constructor:mozc.commands.RendererCommand.CandidateForm)
}

void RendererCommand_CandidateForm::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RendererCommand_CandidateForm_protocol_2frenderer_5fcommand_2eproto.base);
  ::memset(&current_position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&style_bits_) -
      reinterpret_cast<char*>(&current_position_)) + sizeof(style_bits_));
}

RendererCommand_CandidateForm::~RendererCommand_CandidateForm() {
  // @@protoc_insertion_point(destructor:mozc.commands.RendererCommand.CandidateForm)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RendererCommand_CandidateForm::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete current_position_;
  if (this != internal_default_instance()) delete area_;
}

void RendererCommand_CandidateForm::ArenaDtor(void* object) {
  RendererCommand_CandidateForm* _this = reinterpret_cast< RendererCommand_CandidateForm* >(object);
  (void)_this;
}
void RendererCommand_CandidateForm::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RendererCommand_CandidateForm::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RendererCommand_CandidateForm& RendererCommand_CandidateForm::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RendererCommand_CandidateForm_protocol_2frenderer_5fcommand_2eproto.base);
  return *internal_default_instance();
}


void RendererCommand_CandidateForm::Clear() {
// @@protoc_insertion_point(message_clear_start:mozc.commands.RendererCommand.CandidateForm)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(current_position_ != nullptr);
      current_position_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(area_ != nullptr);
      area_->Clear();
    }
  }
  style_bits_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RendererCommand_CandidateForm::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .mozc.commands.RendererCommand.Point current_position = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_current_position(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .mozc.commands.RendererCommand.Rectangle area = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_area(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 style_bits = 4 [default = 0];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_style_bits(&has_bits);
          style_bits_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RendererCommand_CandidateForm::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mozc.commands.RendererCommand.CandidateForm)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .mozc.commands.RendererCommand.Point current_position = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::current_position(this), target, stream);
  }

  // optional .mozc.commands.RendererCommand.Rectangle area = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::area(this), target, stream);
  }

  // optional uint32 style_bits = 4 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_style_bits(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mozc.commands.RendererCommand.CandidateForm)
  return target;
}

size_t RendererCommand_CandidateForm::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mozc.commands.RendererCommand.CandidateForm)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .mozc.commands.RendererCommand.Point current_position = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *current_position_);
    }

    // optional .mozc.commands.RendererCommand.Rectangle area = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *area_);
    }

    // optional uint32 style_bits = 4 [default = 0];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_style_bits());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RendererCommand_CandidateForm::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mozc.commands.RendererCommand.CandidateForm)
  GOOGLE_DCHECK_NE(&from, this);
  const RendererCommand_CandidateForm* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RendererCommand_CandidateForm>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mozc.commands.RendererCommand.CandidateForm)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mozc.commands.RendererCommand.CandidateForm)
    MergeFrom(*source);
  }
}

void RendererCommand_CandidateForm::MergeFrom(const RendererCommand_CandidateForm& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mozc.commands.RendererCommand.CandidateForm)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_current_position()->::mozc::commands::RendererCommand_Point::MergeFrom(from._internal_current_position());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_area()->::mozc::commands::RendererCommand_Rectangle::MergeFrom(from._internal_area());
    }
    if (cached_has_bits & 0x00000004u) {
      style_bits_ = from.style_bits_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RendererCommand_CandidateForm::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mozc.commands.RendererCommand.CandidateForm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RendererCommand_CandidateForm::CopyFrom(const RendererCommand_CandidateForm& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mozc.commands.RendererCommand.CandidateForm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RendererCommand_CandidateForm::IsInitialized() const {
  return true;
}

void RendererCommand_CandidateForm::InternalSwap(RendererCommand_CandidateForm* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RendererCommand_CandidateForm, style_bits_)
      + sizeof(RendererCommand_CandidateForm::style_bits_)
      - PROTOBUF_FIELD_OFFSET(RendererCommand_CandidateForm, current_position_)>(
          reinterpret_cast<char*>(&current_position_),
          reinterpret_cast<char*>(&other->current_position_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RendererCommand_CandidateForm::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RendererCommand_CharacterPosition::InitAsDefaultInstance() {
  ::mozc::commands::_RendererCommand_CharacterPosition_default_instance_._instance.get_mutable()->top_left_ = const_cast< ::mozc::commands::RendererCommand_Point*>(
      ::mozc::commands::RendererCommand_Point::internal_default_instance());
  ::mozc::commands::_RendererCommand_CharacterPosition_default_instance_._instance.get_mutable()->document_area_ = const_cast< ::mozc::commands::RendererCommand_Rectangle*>(
      ::mozc::commands::RendererCommand_Rectangle::internal_default_instance());
}
class RendererCommand_CharacterPosition::_Internal {
 public:
  using HasBits = decltype(std::declval<RendererCommand_CharacterPosition>()._has_bits_);
  static void set_has_position(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::mozc::commands::RendererCommand_Point& top_left(const RendererCommand_CharacterPosition* msg);
  static void set_has_top_left(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_line_height(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::mozc::commands::RendererCommand_Rectangle& document_area(const RendererCommand_CharacterPosition* msg);
  static void set_has_document_area(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::mozc::commands::RendererCommand_Point&
RendererCommand_CharacterPosition::_Internal::top_left(const RendererCommand_CharacterPosition* msg) {
  return *msg->top_left_;
}
const ::mozc::commands::RendererCommand_Rectangle&
RendererCommand_CharacterPosition::_Internal::document_area(const RendererCommand_CharacterPosition* msg) {
  return *msg->document_area_;
}
RendererCommand_CharacterPosition::RendererCommand_CharacterPosition(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mozc.commands.RendererCommand.CharacterPosition)
}
RendererCommand_CharacterPosition::RendererCommand_CharacterPosition(const RendererCommand_CharacterPosition& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_top_left()) {
    top_left_ = new ::mozc::commands::RendererCommand_Point(*from.top_left_);
  } else {
    top_left_ = nullptr;
  }
  if (from._internal_has_document_area()) {
    document_area_ = new ::mozc::commands::RendererCommand_Rectangle(*from.document_area_);
  } else {
    document_area_ = nullptr;
  }
  ::memcpy(&position_, &from.position_,
    static_cast<size_t>(reinterpret_cast<char*>(&line_height_) -
    reinterpret_cast<char*>(&position_)) + sizeof(line_height_));
  // @@protoc_insertion_point(copy_constructor:mozc.commands.RendererCommand.CharacterPosition)
}

void RendererCommand_CharacterPosition::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RendererCommand_CharacterPosition_protocol_2frenderer_5fcommand_2eproto.base);
  ::memset(&top_left_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&line_height_) -
      reinterpret_cast<char*>(&top_left_)) + sizeof(line_height_));
}

RendererCommand_CharacterPosition::~RendererCommand_CharacterPosition() {
  // @@protoc_insertion_point(destructor:mozc.commands.RendererCommand.CharacterPosition)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RendererCommand_CharacterPosition::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete top_left_;
  if (this != internal_default_instance()) delete document_area_;
}

void RendererCommand_CharacterPosition::ArenaDtor(void* object) {
  RendererCommand_CharacterPosition* _this = reinterpret_cast< RendererCommand_CharacterPosition* >(object);
  (void)_this;
}
void RendererCommand_CharacterPosition::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RendererCommand_CharacterPosition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RendererCommand_CharacterPosition& RendererCommand_CharacterPosition::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RendererCommand_CharacterPosition_protocol_2frenderer_5fcommand_2eproto.base);
  return *internal_default_instance();
}


void RendererCommand_CharacterPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:mozc.commands.RendererCommand.CharacterPosition)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(top_left_ != nullptr);
      top_left_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(document_area_ != nullptr);
      document_area_->Clear();
    }
  }
  if (cached_has_bits & 0x0000000cu) {
    ::memset(&position_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&line_height_) -
        reinterpret_cast<char*>(&position_)) + sizeof(line_height_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RendererCommand_CharacterPosition::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 position = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_position(&has_bits);
          position_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .mozc.commands.RendererCommand.Point top_left = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_top_left(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 line_height = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_line_height(&has_bits);
          line_height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .mozc.commands.RendererCommand.Rectangle document_area = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_document_area(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RendererCommand_CharacterPosition::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mozc.commands.RendererCommand.CharacterPosition)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 position = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_position(), target);
  }

  // optional .mozc.commands.RendererCommand.Point top_left = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::top_left(this), target, stream);
  }

  // optional uint32 line_height = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_line_height(), target);
  }

  // optional .mozc.commands.RendererCommand.Rectangle document_area = 4;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::document_area(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mozc.commands.RendererCommand.CharacterPosition)
  return target;
}

size_t RendererCommand_CharacterPosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mozc.commands.RendererCommand.CharacterPosition)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional .mozc.commands.RendererCommand.Point top_left = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *top_left_);
    }

    // optional .mozc.commands.RendererCommand.Rectangle document_area = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *document_area_);
    }

    // optional uint32 position = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_position());
    }

    // optional uint32 line_height = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_line_height());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RendererCommand_CharacterPosition::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mozc.commands.RendererCommand.CharacterPosition)
  GOOGLE_DCHECK_NE(&from, this);
  const RendererCommand_CharacterPosition* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RendererCommand_CharacterPosition>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mozc.commands.RendererCommand.CharacterPosition)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mozc.commands.RendererCommand.CharacterPosition)
    MergeFrom(*source);
  }
}

void RendererCommand_CharacterPosition::MergeFrom(const RendererCommand_CharacterPosition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mozc.commands.RendererCommand.CharacterPosition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_top_left()->::mozc::commands::RendererCommand_Point::MergeFrom(from._internal_top_left());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_document_area()->::mozc::commands::RendererCommand_Rectangle::MergeFrom(from._internal_document_area());
    }
    if (cached_has_bits & 0x00000004u) {
      position_ = from.position_;
    }
    if (cached_has_bits & 0x00000008u) {
      line_height_ = from.line_height_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RendererCommand_CharacterPosition::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mozc.commands.RendererCommand.CharacterPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RendererCommand_CharacterPosition::CopyFrom(const RendererCommand_CharacterPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mozc.commands.RendererCommand.CharacterPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RendererCommand_CharacterPosition::IsInitialized() const {
  return true;
}

void RendererCommand_CharacterPosition::InternalSwap(RendererCommand_CharacterPosition* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RendererCommand_CharacterPosition, line_height_)
      + sizeof(RendererCommand_CharacterPosition::line_height_)
      - PROTOBUF_FIELD_OFFSET(RendererCommand_CharacterPosition, top_left_)>(
          reinterpret_cast<char*>(&top_left_),
          reinterpret_cast<char*>(&other->top_left_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RendererCommand_CharacterPosition::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RendererCommand_CaretInfo::InitAsDefaultInstance() {
  ::mozc::commands::_RendererCommand_CaretInfo_default_instance_._instance.get_mutable()->caret_rect_ = const_cast< ::mozc::commands::RendererCommand_Rectangle*>(
      ::mozc::commands::RendererCommand_Rectangle::internal_default_instance());
}
class RendererCommand_CaretInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<RendererCommand_CaretInfo>()._has_bits_);
  static void set_has_blinking(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::mozc::commands::RendererCommand_Rectangle& caret_rect(const RendererCommand_CaretInfo* msg);
  static void set_has_caret_rect(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_target_window_handle(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::mozc::commands::RendererCommand_Rectangle&
RendererCommand_CaretInfo::_Internal::caret_rect(const RendererCommand_CaretInfo* msg) {
  return *msg->caret_rect_;
}
RendererCommand_CaretInfo::RendererCommand_CaretInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mozc.commands.RendererCommand.CaretInfo)
}
RendererCommand_CaretInfo::RendererCommand_CaretInfo(const RendererCommand_CaretInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_caret_rect()) {
    caret_rect_ = new ::mozc::commands::RendererCommand_Rectangle(*from.caret_rect_);
  } else {
    caret_rect_ = nullptr;
  }
  ::memcpy(&blinking_, &from.blinking_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_window_handle_) -
    reinterpret_cast<char*>(&blinking_)) + sizeof(target_window_handle_));
  // @@protoc_insertion_point(copy_constructor:mozc.commands.RendererCommand.CaretInfo)
}

void RendererCommand_CaretInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RendererCommand_CaretInfo_protocol_2frenderer_5fcommand_2eproto.base);
  ::memset(&caret_rect_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_window_handle_) -
      reinterpret_cast<char*>(&caret_rect_)) + sizeof(target_window_handle_));
}

RendererCommand_CaretInfo::~RendererCommand_CaretInfo() {
  // @@protoc_insertion_point(destructor:mozc.commands.RendererCommand.CaretInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RendererCommand_CaretInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete caret_rect_;
}

void RendererCommand_CaretInfo::ArenaDtor(void* object) {
  RendererCommand_CaretInfo* _this = reinterpret_cast< RendererCommand_CaretInfo* >(object);
  (void)_this;
}
void RendererCommand_CaretInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RendererCommand_CaretInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RendererCommand_CaretInfo& RendererCommand_CaretInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RendererCommand_CaretInfo_protocol_2frenderer_5fcommand_2eproto.base);
  return *internal_default_instance();
}


void RendererCommand_CaretInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:mozc.commands.RendererCommand.CaretInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(caret_rect_ != nullptr);
    caret_rect_->Clear();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&blinking_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&target_window_handle_) -
        reinterpret_cast<char*>(&blinking_)) + sizeof(target_window_handle_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RendererCommand_CaretInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bool blinking = 1 [default = false];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_blinking(&has_bits);
          blinking_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .mozc.commands.RendererCommand.Rectangle caret_rect = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_caret_rect(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 target_window_handle = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_target_window_handle(&has_bits);
          target_window_handle_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RendererCommand_CaretInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mozc.commands.RendererCommand.CaretInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool blinking = 1 [default = false];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_blinking(), target);
  }

  // optional .mozc.commands.RendererCommand.Rectangle caret_rect = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::caret_rect(this), target, stream);
  }

  // optional uint32 target_window_handle = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_target_window_handle(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mozc.commands.RendererCommand.CaretInfo)
  return target;
}

size_t RendererCommand_CaretInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mozc.commands.RendererCommand.CaretInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .mozc.commands.RendererCommand.Rectangle caret_rect = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *caret_rect_);
    }

    // optional bool blinking = 1 [default = false];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

    // optional uint32 target_window_handle = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_target_window_handle());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RendererCommand_CaretInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mozc.commands.RendererCommand.CaretInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const RendererCommand_CaretInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RendererCommand_CaretInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mozc.commands.RendererCommand.CaretInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mozc.commands.RendererCommand.CaretInfo)
    MergeFrom(*source);
  }
}

void RendererCommand_CaretInfo::MergeFrom(const RendererCommand_CaretInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mozc.commands.RendererCommand.CaretInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_caret_rect()->::mozc::commands::RendererCommand_Rectangle::MergeFrom(from._internal_caret_rect());
    }
    if (cached_has_bits & 0x00000002u) {
      blinking_ = from.blinking_;
    }
    if (cached_has_bits & 0x00000004u) {
      target_window_handle_ = from.target_window_handle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RendererCommand_CaretInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mozc.commands.RendererCommand.CaretInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RendererCommand_CaretInfo::CopyFrom(const RendererCommand_CaretInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mozc.commands.RendererCommand.CaretInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RendererCommand_CaretInfo::IsInitialized() const {
  return true;
}

void RendererCommand_CaretInfo::InternalSwap(RendererCommand_CaretInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RendererCommand_CaretInfo, target_window_handle_)
      + sizeof(RendererCommand_CaretInfo::target_window_handle_)
      - PROTOBUF_FIELD_OFFSET(RendererCommand_CaretInfo, caret_rect_)>(
          reinterpret_cast<char*>(&caret_rect_),
          reinterpret_cast<char*>(&other->caret_rect_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RendererCommand_CaretInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RendererCommand_IndicatorInfo::InitAsDefaultInstance() {
  ::mozc::commands::_RendererCommand_IndicatorInfo_default_instance_._instance.get_mutable()->status_ = const_cast< ::mozc::commands::Status*>(
      ::mozc::commands::Status::internal_default_instance());
}
class RendererCommand_IndicatorInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<RendererCommand_IndicatorInfo>()._has_bits_);
  static const ::mozc::commands::Status& status(const RendererCommand_IndicatorInfo* msg);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mozc::commands::Status&
RendererCommand_IndicatorInfo::_Internal::status(const RendererCommand_IndicatorInfo* msg) {
  return *msg->status_;
}
void RendererCommand_IndicatorInfo::clear_status() {
  if (status_ != nullptr) status_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
RendererCommand_IndicatorInfo::RendererCommand_IndicatorInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mozc.commands.RendererCommand.IndicatorInfo)
}
RendererCommand_IndicatorInfo::RendererCommand_IndicatorInfo(const RendererCommand_IndicatorInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::mozc::commands::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mozc.commands.RendererCommand.IndicatorInfo)
}

void RendererCommand_IndicatorInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RendererCommand_IndicatorInfo_protocol_2frenderer_5fcommand_2eproto.base);
  status_ = nullptr;
}

RendererCommand_IndicatorInfo::~RendererCommand_IndicatorInfo() {
  // @@protoc_insertion_point(destructor:mozc.commands.RendererCommand.IndicatorInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RendererCommand_IndicatorInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void RendererCommand_IndicatorInfo::ArenaDtor(void* object) {
  RendererCommand_IndicatorInfo* _this = reinterpret_cast< RendererCommand_IndicatorInfo* >(object);
  (void)_this;
}
void RendererCommand_IndicatorInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RendererCommand_IndicatorInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RendererCommand_IndicatorInfo& RendererCommand_IndicatorInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RendererCommand_IndicatorInfo_protocol_2frenderer_5fcommand_2eproto.base);
  return *internal_default_instance();
}


void RendererCommand_IndicatorInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:mozc.commands.RendererCommand.IndicatorInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(status_ != nullptr);
    status_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RendererCommand_IndicatorInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .mozc.commands.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RendererCommand_IndicatorInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mozc.commands.RendererCommand.IndicatorInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .mozc.commands.Status status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mozc.commands.RendererCommand.IndicatorInfo)
  return target;
}

size_t RendererCommand_IndicatorInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mozc.commands.RendererCommand.IndicatorInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .mozc.commands.Status status = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RendererCommand_IndicatorInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mozc.commands.RendererCommand.IndicatorInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const RendererCommand_IndicatorInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RendererCommand_IndicatorInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mozc.commands.RendererCommand.IndicatorInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mozc.commands.RendererCommand.IndicatorInfo)
    MergeFrom(*source);
  }
}

void RendererCommand_IndicatorInfo::MergeFrom(const RendererCommand_IndicatorInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mozc.commands.RendererCommand.IndicatorInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_status()) {
    _internal_mutable_status()->::mozc::commands::Status::MergeFrom(from._internal_status());
  }
}

void RendererCommand_IndicatorInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mozc.commands.RendererCommand.IndicatorInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RendererCommand_IndicatorInfo::CopyFrom(const RendererCommand_IndicatorInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mozc.commands.RendererCommand.IndicatorInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RendererCommand_IndicatorInfo::IsInitialized() const {
  return true;
}

void RendererCommand_IndicatorInfo::InternalSwap(RendererCommand_IndicatorInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RendererCommand_IndicatorInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RendererCommand_ApplicationInfo::InitAsDefaultInstance() {
  ::mozc::commands::_RendererCommand_ApplicationInfo_default_instance_._instance.get_mutable()->composition_font_ = const_cast< ::mozc::commands::RendererCommand_WinLogFont*>(
      ::mozc::commands::RendererCommand_WinLogFont::internal_default_instance());
  ::mozc::commands::_RendererCommand_ApplicationInfo_default_instance_._instance.get_mutable()->composition_form_ = const_cast< ::mozc::commands::RendererCommand_CompositionForm*>(
      ::mozc::commands::RendererCommand_CompositionForm::internal_default_instance());
  ::mozc::commands::_RendererCommand_ApplicationInfo_default_instance_._instance.get_mutable()->candidate_form_ = const_cast< ::mozc::commands::RendererCommand_CandidateForm*>(
      ::mozc::commands::RendererCommand_CandidateForm::internal_default_instance());
  ::mozc::commands::_RendererCommand_ApplicationInfo_default_instance_._instance.get_mutable()->composition_target_ = const_cast< ::mozc::commands::RendererCommand_CharacterPosition*>(
      ::mozc::commands::RendererCommand_CharacterPosition::internal_default_instance());
  ::mozc::commands::_RendererCommand_ApplicationInfo_default_instance_._instance.get_mutable()->caret_info_ = const_cast< ::mozc::commands::RendererCommand_CaretInfo*>(
      ::mozc::commands::RendererCommand_CaretInfo::internal_default_instance());
  ::mozc::commands::_RendererCommand_ApplicationInfo_default_instance_._instance.get_mutable()->indicator_info_ = const_cast< ::mozc::commands::RendererCommand_IndicatorInfo*>(
      ::mozc::commands::RendererCommand_IndicatorInfo::internal_default_instance());
}
class RendererCommand_ApplicationInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<RendererCommand_ApplicationInfo>()._has_bits_);
  static void set_has_process_id(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_thread_id(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_receiver_handle(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_target_window_handle(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static const ::mozc::commands::RendererCommand_WinLogFont& composition_font(const RendererCommand_ApplicationInfo* msg);
  static void set_has_composition_font(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_input_framework(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static const ::mozc::commands::RendererCommand_CompositionForm& composition_form(const RendererCommand_ApplicationInfo* msg);
  static void set_has_composition_form(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::mozc::commands::RendererCommand_CandidateForm& candidate_form(const RendererCommand_ApplicationInfo* msg);
  static void set_has_candidate_form(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_ui_visibilities(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static const ::mozc::commands::RendererCommand_CharacterPosition& composition_target(const RendererCommand_ApplicationInfo* msg);
  static void set_has_composition_target(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::mozc::commands::RendererCommand_CaretInfo& caret_info(const RendererCommand_ApplicationInfo* msg);
  static void set_has_caret_info(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_pango_font_description(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::mozc::commands::RendererCommand_IndicatorInfo& indicator_info(const RendererCommand_ApplicationInfo* msg);
  static void set_has_indicator_info(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
};

const ::mozc::commands::RendererCommand_WinLogFont&
RendererCommand_ApplicationInfo::_Internal::composition_font(const RendererCommand_ApplicationInfo* msg) {
  return *msg->composition_font_;
}
const ::mozc::commands::RendererCommand_CompositionForm&
RendererCommand_ApplicationInfo::_Internal::composition_form(const RendererCommand_ApplicationInfo* msg) {
  return *msg->composition_form_;
}
const ::mozc::commands::RendererCommand_CandidateForm&
RendererCommand_ApplicationInfo::_Internal::candidate_form(const RendererCommand_ApplicationInfo* msg) {
  return *msg->candidate_form_;
}
const ::mozc::commands::RendererCommand_CharacterPosition&
RendererCommand_ApplicationInfo::_Internal::composition_target(const RendererCommand_ApplicationInfo* msg) {
  return *msg->composition_target_;
}
const ::mozc::commands::RendererCommand_CaretInfo&
RendererCommand_ApplicationInfo::_Internal::caret_info(const RendererCommand_ApplicationInfo* msg) {
  return *msg->caret_info_;
}
const ::mozc::commands::RendererCommand_IndicatorInfo&
RendererCommand_ApplicationInfo::_Internal::indicator_info(const RendererCommand_ApplicationInfo* msg) {
  return *msg->indicator_info_;
}
RendererCommand_ApplicationInfo::RendererCommand_ApplicationInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mozc.commands.RendererCommand.ApplicationInfo)
}
RendererCommand_ApplicationInfo::RendererCommand_ApplicationInfo(const RendererCommand_ApplicationInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  pango_font_description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_pango_font_description()) {
    pango_font_description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_pango_font_description(),
      GetArena());
  }
  if (from._internal_has_composition_font()) {
    composition_font_ = new ::mozc::commands::RendererCommand_WinLogFont(*from.composition_font_);
  } else {
    composition_font_ = nullptr;
  }
  if (from._internal_has_composition_form()) {
    composition_form_ = new ::mozc::commands::RendererCommand_CompositionForm(*from.composition_form_);
  } else {
    composition_form_ = nullptr;
  }
  if (from._internal_has_candidate_form()) {
    candidate_form_ = new ::mozc::commands::RendererCommand_CandidateForm(*from.candidate_form_);
  } else {
    candidate_form_ = nullptr;
  }
  if (from._internal_has_composition_target()) {
    composition_target_ = new ::mozc::commands::RendererCommand_CharacterPosition(*from.composition_target_);
  } else {
    composition_target_ = nullptr;
  }
  if (from._internal_has_caret_info()) {
    caret_info_ = new ::mozc::commands::RendererCommand_CaretInfo(*from.caret_info_);
  } else {
    caret_info_ = nullptr;
  }
  if (from._internal_has_indicator_info()) {
    indicator_info_ = new ::mozc::commands::RendererCommand_IndicatorInfo(*from.indicator_info_);
  } else {
    indicator_info_ = nullptr;
  }
  ::memcpy(&process_id_, &from.process_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&ui_visibilities_) -
    reinterpret_cast<char*>(&process_id_)) + sizeof(ui_visibilities_));
  // @@protoc_insertion_point(copy_constructor:mozc.commands.RendererCommand.ApplicationInfo)
}

void RendererCommand_ApplicationInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RendererCommand_ApplicationInfo_protocol_2frenderer_5fcommand_2eproto.base);
  pango_font_description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&composition_font_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ui_visibilities_) -
      reinterpret_cast<char*>(&composition_font_)) + sizeof(ui_visibilities_));
}

RendererCommand_ApplicationInfo::~RendererCommand_ApplicationInfo() {
  // @@protoc_insertion_point(destructor:mozc.commands.RendererCommand.ApplicationInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RendererCommand_ApplicationInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  pango_font_description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete composition_font_;
  if (this != internal_default_instance()) delete composition_form_;
  if (this != internal_default_instance()) delete candidate_form_;
  if (this != internal_default_instance()) delete composition_target_;
  if (this != internal_default_instance()) delete caret_info_;
  if (this != internal_default_instance()) delete indicator_info_;
}

void RendererCommand_ApplicationInfo::ArenaDtor(void* object) {
  RendererCommand_ApplicationInfo* _this = reinterpret_cast< RendererCommand_ApplicationInfo* >(object);
  (void)_this;
}
void RendererCommand_ApplicationInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RendererCommand_ApplicationInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RendererCommand_ApplicationInfo& RendererCommand_ApplicationInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RendererCommand_ApplicationInfo_protocol_2frenderer_5fcommand_2eproto.base);
  return *internal_default_instance();
}


void RendererCommand_ApplicationInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:mozc.commands.RendererCommand.ApplicationInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      pango_font_description_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(composition_font_ != nullptr);
      composition_font_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(composition_form_ != nullptr);
      composition_form_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(candidate_form_ != nullptr);
      candidate_form_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(composition_target_ != nullptr);
      composition_target_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(caret_info_ != nullptr);
      caret_info_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(indicator_info_ != nullptr);
      indicator_info_->Clear();
    }
  }
  process_id_ = 0u;
  if (cached_has_bits & 0x00001f00u) {
    ::memset(&thread_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ui_visibilities_) -
        reinterpret_cast<char*>(&thread_id_)) + sizeof(ui_visibilities_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RendererCommand_ApplicationInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 process_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_process_id(&has_bits);
          process_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 thread_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_thread_id(&has_bits);
          thread_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 receiver_handle = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_receiver_handle(&has_bits);
          receiver_handle_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 target_window_handle = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_target_window_handle(&has_bits);
          target_window_handle_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .mozc.commands.RendererCommand.WinLogFont composition_font = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_composition_font(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .mozc.commands.RendererCommand.ApplicationInfo.InputFrameworkType input_framework = 6 [default = UNKNOWN_FRAMEWORK];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::mozc::commands::RendererCommand_ApplicationInfo_InputFrameworkType_IsValid(val))) {
            _internal_set_input_framework(static_cast<::mozc::commands::RendererCommand_ApplicationInfo_InputFrameworkType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(6, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .mozc.commands.RendererCommand.CompositionForm composition_form = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_composition_form(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .mozc.commands.RendererCommand.CandidateForm candidate_form = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_candidate_form(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 ui_visibilities = 9 [default = 0];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          _Internal::set_has_ui_visibilities(&has_bits);
          ui_visibilities_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .mozc.commands.RendererCommand.CharacterPosition composition_target = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_composition_target(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .mozc.commands.RendererCommand.CaretInfo caret_info = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_caret_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string pango_font_description = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          auto str = _internal_mutable_pango_font_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mozc.commands.RendererCommand.ApplicationInfo.pango_font_description");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .mozc.commands.RendererCommand.IndicatorInfo indicator_info = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_indicator_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RendererCommand_ApplicationInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mozc.commands.RendererCommand.ApplicationInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 process_id = 1;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_process_id(), target);
  }

  // optional uint32 thread_id = 2;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_thread_id(), target);
  }

  // optional uint32 receiver_handle = 3;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_receiver_handle(), target);
  }

  // optional uint32 target_window_handle = 4;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_target_window_handle(), target);
  }

  // optional .mozc.commands.RendererCommand.WinLogFont composition_font = 5;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::composition_font(this), target, stream);
  }

  // optional .mozc.commands.RendererCommand.ApplicationInfo.InputFrameworkType input_framework = 6 [default = UNKNOWN_FRAMEWORK];
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_input_framework(), target);
  }

  // optional .mozc.commands.RendererCommand.CompositionForm composition_form = 7;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::composition_form(this), target, stream);
  }

  // optional .mozc.commands.RendererCommand.CandidateForm candidate_form = 8;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::candidate_form(this), target, stream);
  }

  // optional int32 ui_visibilities = 9 [default = 0];
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(9, this->_internal_ui_visibilities(), target);
  }

  // optional .mozc.commands.RendererCommand.CharacterPosition composition_target = 10;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        10, _Internal::composition_target(this), target, stream);
  }

  // optional .mozc.commands.RendererCommand.CaretInfo caret_info = 11;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        11, _Internal::caret_info(this), target, stream);
  }

  // optional string pango_font_description = 13;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_pango_font_description().data(), static_cast<int>(this->_internal_pango_font_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "mozc.commands.RendererCommand.ApplicationInfo.pango_font_description");
    target = stream->WriteStringMaybeAliased(
        13, this->_internal_pango_font_description(), target);
  }

  // optional .mozc.commands.RendererCommand.IndicatorInfo indicator_info = 14;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        14, _Internal::indicator_info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mozc.commands.RendererCommand.ApplicationInfo)
  return target;
}

size_t RendererCommand_ApplicationInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mozc.commands.RendererCommand.ApplicationInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string pango_font_description = 13;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_pango_font_description());
    }

    // optional .mozc.commands.RendererCommand.WinLogFont composition_font = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *composition_font_);
    }

    // optional .mozc.commands.RendererCommand.CompositionForm composition_form = 7;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *composition_form_);
    }

    // optional .mozc.commands.RendererCommand.CandidateForm candidate_form = 8;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *candidate_form_);
    }

    // optional .mozc.commands.RendererCommand.CharacterPosition composition_target = 10;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *composition_target_);
    }

    // optional .mozc.commands.RendererCommand.CaretInfo caret_info = 11;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *caret_info_);
    }

    // optional .mozc.commands.RendererCommand.IndicatorInfo indicator_info = 14;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *indicator_info_);
    }

    // optional uint32 process_id = 1;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_process_id());
    }

  }
  if (cached_has_bits & 0x00001f00u) {
    // optional uint32 thread_id = 2;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_thread_id());
    }

    // optional uint32 receiver_handle = 3;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_receiver_handle());
    }

    // optional uint32 target_window_handle = 4;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_target_window_handle());
    }

    // optional .mozc.commands.RendererCommand.ApplicationInfo.InputFrameworkType input_framework = 6 [default = UNKNOWN_FRAMEWORK];
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_input_framework());
    }

    // optional int32 ui_visibilities = 9 [default = 0];
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_ui_visibilities());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RendererCommand_ApplicationInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mozc.commands.RendererCommand.ApplicationInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const RendererCommand_ApplicationInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RendererCommand_ApplicationInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mozc.commands.RendererCommand.ApplicationInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mozc.commands.RendererCommand.ApplicationInfo)
    MergeFrom(*source);
  }
}

void RendererCommand_ApplicationInfo::MergeFrom(const RendererCommand_ApplicationInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mozc.commands.RendererCommand.ApplicationInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_pango_font_description(from._internal_pango_font_description());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_composition_font()->::mozc::commands::RendererCommand_WinLogFont::MergeFrom(from._internal_composition_font());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_composition_form()->::mozc::commands::RendererCommand_CompositionForm::MergeFrom(from._internal_composition_form());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_candidate_form()->::mozc::commands::RendererCommand_CandidateForm::MergeFrom(from._internal_candidate_form());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_mutable_composition_target()->::mozc::commands::RendererCommand_CharacterPosition::MergeFrom(from._internal_composition_target());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_mutable_caret_info()->::mozc::commands::RendererCommand_CaretInfo::MergeFrom(from._internal_caret_info());
    }
    if (cached_has_bits & 0x00000040u) {
      _internal_mutable_indicator_info()->::mozc::commands::RendererCommand_IndicatorInfo::MergeFrom(from._internal_indicator_info());
    }
    if (cached_has_bits & 0x00000080u) {
      process_id_ = from.process_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00001f00u) {
    if (cached_has_bits & 0x00000100u) {
      thread_id_ = from.thread_id_;
    }
    if (cached_has_bits & 0x00000200u) {
      receiver_handle_ = from.receiver_handle_;
    }
    if (cached_has_bits & 0x00000400u) {
      target_window_handle_ = from.target_window_handle_;
    }
    if (cached_has_bits & 0x00000800u) {
      input_framework_ = from.input_framework_;
    }
    if (cached_has_bits & 0x00001000u) {
      ui_visibilities_ = from.ui_visibilities_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RendererCommand_ApplicationInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mozc.commands.RendererCommand.ApplicationInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RendererCommand_ApplicationInfo::CopyFrom(const RendererCommand_ApplicationInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mozc.commands.RendererCommand.ApplicationInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RendererCommand_ApplicationInfo::IsInitialized() const {
  return true;
}

void RendererCommand_ApplicationInfo::InternalSwap(RendererCommand_ApplicationInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  pango_font_description_.Swap(&other->pango_font_description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RendererCommand_ApplicationInfo, ui_visibilities_)
      + sizeof(RendererCommand_ApplicationInfo::ui_visibilities_)
      - PROTOBUF_FIELD_OFFSET(RendererCommand_ApplicationInfo, composition_font_)>(
          reinterpret_cast<char*>(&composition_font_),
          reinterpret_cast<char*>(&other->composition_font_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RendererCommand_ApplicationInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RendererCommand::InitAsDefaultInstance() {
  ::mozc::commands::_RendererCommand_default_instance_._instance.get_mutable()->output_ = const_cast< ::mozc::commands::Output*>(
      ::mozc::commands::Output::internal_default_instance());
  ::mozc::commands::_RendererCommand_default_instance_._instance.get_mutable()->preedit_rectangle_ = const_cast< ::mozc::commands::RendererCommand_Rectangle*>(
      ::mozc::commands::RendererCommand_Rectangle::internal_default_instance());
  ::mozc::commands::_RendererCommand_default_instance_._instance.get_mutable()->application_info_ = const_cast< ::mozc::commands::RendererCommand_ApplicationInfo*>(
      ::mozc::commands::RendererCommand_ApplicationInfo::internal_default_instance());
}
class RendererCommand::_Internal {
 public:
  using HasBits = decltype(std::declval<RendererCommand>()._has_bits_);
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_visible(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::mozc::commands::Output& output(const RendererCommand* msg);
  static void set_has_output(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::mozc::commands::RendererCommand_Rectangle& preedit_rectangle(const RendererCommand* msg);
  static void set_has_preedit_rectangle(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::mozc::commands::RendererCommand_ApplicationInfo& application_info(const RendererCommand* msg);
  static void set_has_application_info(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::mozc::commands::Output&
RendererCommand::_Internal::output(const RendererCommand* msg) {
  return *msg->output_;
}
const ::mozc::commands::RendererCommand_Rectangle&
RendererCommand::_Internal::preedit_rectangle(const RendererCommand* msg) {
  return *msg->preedit_rectangle_;
}
const ::mozc::commands::RendererCommand_ApplicationInfo&
RendererCommand::_Internal::application_info(const RendererCommand* msg) {
  return *msg->application_info_;
}
void RendererCommand::clear_output() {
  if (output_ != nullptr) output_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
RendererCommand::RendererCommand(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mozc.commands.RendererCommand)
}
RendererCommand::RendererCommand(const RendererCommand& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_output()) {
    output_ = new ::mozc::commands::Output(*from.output_);
  } else {
    output_ = nullptr;
  }
  if (from._internal_has_preedit_rectangle()) {
    preedit_rectangle_ = new ::mozc::commands::RendererCommand_Rectangle(*from.preedit_rectangle_);
  } else {
    preedit_rectangle_ = nullptr;
  }
  if (from._internal_has_application_info()) {
    application_info_ = new ::mozc::commands::RendererCommand_ApplicationInfo(*from.application_info_);
  } else {
    application_info_ = nullptr;
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&visible_) -
    reinterpret_cast<char*>(&type_)) + sizeof(visible_));
  // @@protoc_insertion_point(copy_constructor:mozc.commands.RendererCommand)
}

void RendererCommand::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RendererCommand_protocol_2frenderer_5fcommand_2eproto.base);
  ::memset(&output_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&visible_) -
      reinterpret_cast<char*>(&output_)) + sizeof(visible_));
}

RendererCommand::~RendererCommand() {
  // @@protoc_insertion_point(destructor:mozc.commands.RendererCommand)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RendererCommand::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete output_;
  if (this != internal_default_instance()) delete preedit_rectangle_;
  if (this != internal_default_instance()) delete application_info_;
}

void RendererCommand::ArenaDtor(void* object) {
  RendererCommand* _this = reinterpret_cast< RendererCommand* >(object);
  (void)_this;
}
void RendererCommand::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RendererCommand::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RendererCommand& RendererCommand::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RendererCommand_protocol_2frenderer_5fcommand_2eproto.base);
  return *internal_default_instance();
}


void RendererCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:mozc.commands.RendererCommand)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(output_ != nullptr);
      output_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(preedit_rectangle_ != nullptr);
      preedit_rectangle_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(application_info_ != nullptr);
      application_info_->Clear();
    }
  }
  if (cached_has_bits & 0x00000018u) {
    ::memset(&type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&visible_) -
        reinterpret_cast<char*>(&type_)) + sizeof(visible_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RendererCommand::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .mozc.commands.RendererCommand.CommandType type = 1 [default = NOOP];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::mozc::commands::RendererCommand_CommandType_IsValid(val))) {
            _internal_set_type(static_cast<::mozc::commands::RendererCommand_CommandType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional bool visible = 2 [default = false];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_visible(&has_bits);
          visible_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .mozc.commands.Output output = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_output(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .mozc.commands.RendererCommand.Rectangle preedit_rectangle = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_preedit_rectangle(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .mozc.commands.RendererCommand.ApplicationInfo application_info = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_application_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RendererCommand::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mozc.commands.RendererCommand)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .mozc.commands.RendererCommand.CommandType type = 1 [default = NOOP];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  // optional bool visible = 2 [default = false];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_visible(), target);
  }

  // optional .mozc.commands.Output output = 3;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::output(this), target, stream);
  }

  // optional .mozc.commands.RendererCommand.Rectangle preedit_rectangle = 4;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::preedit_rectangle(this), target, stream);
  }

  // optional .mozc.commands.RendererCommand.ApplicationInfo application_info = 5;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::application_info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mozc.commands.RendererCommand)
  return target;
}

size_t RendererCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mozc.commands.RendererCommand)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional .mozc.commands.Output output = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *output_);
    }

    // optional .mozc.commands.RendererCommand.Rectangle preedit_rectangle = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *preedit_rectangle_);
    }

    // optional .mozc.commands.RendererCommand.ApplicationInfo application_info = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *application_info_);
    }

    // optional .mozc.commands.RendererCommand.CommandType type = 1 [default = NOOP];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
    }

    // optional bool visible = 2 [default = false];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RendererCommand::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mozc.commands.RendererCommand)
  GOOGLE_DCHECK_NE(&from, this);
  const RendererCommand* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RendererCommand>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mozc.commands.RendererCommand)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mozc.commands.RendererCommand)
    MergeFrom(*source);
  }
}

void RendererCommand::MergeFrom(const RendererCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mozc.commands.RendererCommand)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_output()->::mozc::commands::Output::MergeFrom(from._internal_output());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_preedit_rectangle()->::mozc::commands::RendererCommand_Rectangle::MergeFrom(from._internal_preedit_rectangle());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_application_info()->::mozc::commands::RendererCommand_ApplicationInfo::MergeFrom(from._internal_application_info());
    }
    if (cached_has_bits & 0x00000008u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000010u) {
      visible_ = from.visible_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RendererCommand::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mozc.commands.RendererCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RendererCommand::CopyFrom(const RendererCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mozc.commands.RendererCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RendererCommand::IsInitialized() const {
  if (_internal_has_output()) {
    if (!output_->IsInitialized()) return false;
  }
  return true;
}

void RendererCommand::InternalSwap(RendererCommand* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RendererCommand, visible_)
      + sizeof(RendererCommand::visible_)
      - PROTOBUF_FIELD_OFFSET(RendererCommand, output_)>(
          reinterpret_cast<char*>(&output_),
          reinterpret_cast<char*>(&other->output_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RendererCommand::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace commands
}  // namespace mozc
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::mozc::commands::RendererCommand_Rectangle* Arena::CreateMaybeMessage< ::mozc::commands::RendererCommand_Rectangle >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mozc::commands::RendererCommand_Rectangle >(arena);
}
template<> PROTOBUF_NOINLINE ::mozc::commands::RendererCommand_Point* Arena::CreateMaybeMessage< ::mozc::commands::RendererCommand_Point >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mozc::commands::RendererCommand_Point >(arena);
}
template<> PROTOBUF_NOINLINE ::mozc::commands::RendererCommand_WinLogFont* Arena::CreateMaybeMessage< ::mozc::commands::RendererCommand_WinLogFont >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mozc::commands::RendererCommand_WinLogFont >(arena);
}
template<> PROTOBUF_NOINLINE ::mozc::commands::RendererCommand_CompositionForm* Arena::CreateMaybeMessage< ::mozc::commands::RendererCommand_CompositionForm >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mozc::commands::RendererCommand_CompositionForm >(arena);
}
template<> PROTOBUF_NOINLINE ::mozc::commands::RendererCommand_CandidateForm* Arena::CreateMaybeMessage< ::mozc::commands::RendererCommand_CandidateForm >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mozc::commands::RendererCommand_CandidateForm >(arena);
}
template<> PROTOBUF_NOINLINE ::mozc::commands::RendererCommand_CharacterPosition* Arena::CreateMaybeMessage< ::mozc::commands::RendererCommand_CharacterPosition >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mozc::commands::RendererCommand_CharacterPosition >(arena);
}
template<> PROTOBUF_NOINLINE ::mozc::commands::RendererCommand_CaretInfo* Arena::CreateMaybeMessage< ::mozc::commands::RendererCommand_CaretInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mozc::commands::RendererCommand_CaretInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::mozc::commands::RendererCommand_IndicatorInfo* Arena::CreateMaybeMessage< ::mozc::commands::RendererCommand_IndicatorInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mozc::commands::RendererCommand_IndicatorInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::mozc::commands::RendererCommand_ApplicationInfo* Arena::CreateMaybeMessage< ::mozc::commands::RendererCommand_ApplicationInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mozc::commands::RendererCommand_ApplicationInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::mozc::commands::RendererCommand* Arena::CreateMaybeMessage< ::mozc::commands::RendererCommand >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mozc::commands::RendererCommand >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
