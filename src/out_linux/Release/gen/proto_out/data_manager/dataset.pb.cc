// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data_manager/dataset.proto

#include "data_manager/dataset.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_data_5fmanager_2fdataset_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DataSetMetadata_Entry_data_5fmanager_2fdataset_2eproto;
namespace mozc {
class DataSetMetadata_EntryDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DataSetMetadata_Entry> _instance;
} _DataSetMetadata_Entry_default_instance_;
class DataSetMetadataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DataSetMetadata> _instance;
} _DataSetMetadata_default_instance_;
}  // namespace mozc
static void InitDefaultsscc_info_DataSetMetadata_data_5fmanager_2fdataset_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mozc::_DataSetMetadata_default_instance_;
    new (ptr) ::mozc::DataSetMetadata();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mozc::DataSetMetadata::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DataSetMetadata_data_5fmanager_2fdataset_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DataSetMetadata_data_5fmanager_2fdataset_2eproto}, {
      &scc_info_DataSetMetadata_Entry_data_5fmanager_2fdataset_2eproto.base,}};

static void InitDefaultsscc_info_DataSetMetadata_Entry_data_5fmanager_2fdataset_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mozc::_DataSetMetadata_Entry_default_instance_;
    new (ptr) ::mozc::DataSetMetadata_Entry();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mozc::DataSetMetadata_Entry::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DataSetMetadata_Entry_data_5fmanager_2fdataset_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DataSetMetadata_Entry_data_5fmanager_2fdataset_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_data_5fmanager_2fdataset_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_data_5fmanager_2fdataset_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_data_5fmanager_2fdataset_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_data_5fmanager_2fdataset_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::mozc::DataSetMetadata_Entry, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::mozc::DataSetMetadata_Entry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mozc::DataSetMetadata_Entry, name_),
  PROTOBUF_FIELD_OFFSET(::mozc::DataSetMetadata_Entry, offset_),
  PROTOBUF_FIELD_OFFSET(::mozc::DataSetMetadata_Entry, size_),
  0,
  1,
  2,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mozc::DataSetMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mozc::DataSetMetadata, entries_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::mozc::DataSetMetadata_Entry)},
  { 11, -1, sizeof(::mozc::DataSetMetadata)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mozc::_DataSetMetadata_Entry_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mozc::_DataSetMetadata_default_instance_),
};

const char descriptor_table_protodef_data_5fmanager_2fdataset_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\032data_manager/dataset.proto\022\004mozc\"t\n\017Da"
  "taSetMetadata\022,\n\007entries\030\001 \003(\0132\033.mozc.Da"
  "taSetMetadata.Entry\0323\n\005Entry\022\014\n\004name\030\001 \001"
  "(\t\022\016\n\006offset\030\002 \001(\004\022\014\n\004size\030\003 \001(\004"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_data_5fmanager_2fdataset_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_data_5fmanager_2fdataset_2eproto_sccs[2] = {
  &scc_info_DataSetMetadata_data_5fmanager_2fdataset_2eproto.base,
  &scc_info_DataSetMetadata_Entry_data_5fmanager_2fdataset_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_data_5fmanager_2fdataset_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_data_5fmanager_2fdataset_2eproto = {
  false, false, descriptor_table_protodef_data_5fmanager_2fdataset_2eproto, "data_manager/dataset.proto", 152,
  &descriptor_table_data_5fmanager_2fdataset_2eproto_once, descriptor_table_data_5fmanager_2fdataset_2eproto_sccs, descriptor_table_data_5fmanager_2fdataset_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_data_5fmanager_2fdataset_2eproto::offsets,
  file_level_metadata_data_5fmanager_2fdataset_2eproto, 2, file_level_enum_descriptors_data_5fmanager_2fdataset_2eproto, file_level_service_descriptors_data_5fmanager_2fdataset_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_data_5fmanager_2fdataset_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_data_5fmanager_2fdataset_2eproto)), true);
namespace mozc {

// ===================================================================

void DataSetMetadata_Entry::InitAsDefaultInstance() {
}
class DataSetMetadata_Entry::_Internal {
 public:
  using HasBits = decltype(std::declval<DataSetMetadata_Entry>()._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_offset(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_size(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

DataSetMetadata_Entry::DataSetMetadata_Entry(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mozc.DataSetMetadata.Entry)
}
DataSetMetadata_Entry::DataSetMetadata_Entry(const DataSetMetadata_Entry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_name()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(size_));
  // @@protoc_insertion_point(copy_constructor:mozc.DataSetMetadata.Entry)
}

void DataSetMetadata_Entry::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DataSetMetadata_Entry_data_5fmanager_2fdataset_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(size_));
}

DataSetMetadata_Entry::~DataSetMetadata_Entry() {
  // @@protoc_insertion_point(destructor:mozc.DataSetMetadata.Entry)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DataSetMetadata_Entry::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DataSetMetadata_Entry::ArenaDtor(void* object) {
  DataSetMetadata_Entry* _this = reinterpret_cast< DataSetMetadata_Entry* >(object);
  (void)_this;
}
void DataSetMetadata_Entry::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DataSetMetadata_Entry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DataSetMetadata_Entry& DataSetMetadata_Entry::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DataSetMetadata_Entry_data_5fmanager_2fdataset_2eproto.base);
  return *internal_default_instance();
}


void DataSetMetadata_Entry::Clear() {
// @@protoc_insertion_point(message_clear_start:mozc.DataSetMetadata.Entry)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&offset_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&size_) -
        reinterpret_cast<char*>(&offset_)) + sizeof(size_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DataSetMetadata_Entry::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mozc.DataSetMetadata.Entry.name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 offset = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_offset(&has_bits);
          offset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 size = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_size(&has_bits);
          size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DataSetMetadata_Entry::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mozc.DataSetMetadata.Entry)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "mozc.DataSetMetadata.Entry.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // optional uint64 offset = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_offset(), target);
  }

  // optional uint64 size = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mozc.DataSetMetadata.Entry)
  return target;
}

size_t DataSetMetadata_Entry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mozc.DataSetMetadata.Entry)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_name());
    }

    // optional uint64 offset = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_offset());
    }

    // optional uint64 size = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_size());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataSetMetadata_Entry::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mozc.DataSetMetadata.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  const DataSetMetadata_Entry* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DataSetMetadata_Entry>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mozc.DataSetMetadata.Entry)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mozc.DataSetMetadata.Entry)
    MergeFrom(*source);
  }
}

void DataSetMetadata_Entry::MergeFrom(const DataSetMetadata_Entry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mozc.DataSetMetadata.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      offset_ = from.offset_;
    }
    if (cached_has_bits & 0x00000004u) {
      size_ = from.size_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DataSetMetadata_Entry::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mozc.DataSetMetadata.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataSetMetadata_Entry::CopyFrom(const DataSetMetadata_Entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mozc.DataSetMetadata.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataSetMetadata_Entry::IsInitialized() const {
  return true;
}

void DataSetMetadata_Entry::InternalSwap(DataSetMetadata_Entry* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DataSetMetadata_Entry, size_)
      + sizeof(DataSetMetadata_Entry::size_)
      - PROTOBUF_FIELD_OFFSET(DataSetMetadata_Entry, offset_)>(
          reinterpret_cast<char*>(&offset_),
          reinterpret_cast<char*>(&other->offset_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DataSetMetadata_Entry::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DataSetMetadata::InitAsDefaultInstance() {
}
class DataSetMetadata::_Internal {
 public:
};

DataSetMetadata::DataSetMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  entries_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mozc.DataSetMetadata)
}
DataSetMetadata::DataSetMetadata(const DataSetMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mozc.DataSetMetadata)
}

void DataSetMetadata::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DataSetMetadata_data_5fmanager_2fdataset_2eproto.base);
}

DataSetMetadata::~DataSetMetadata() {
  // @@protoc_insertion_point(destructor:mozc.DataSetMetadata)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DataSetMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DataSetMetadata::ArenaDtor(void* object) {
  DataSetMetadata* _this = reinterpret_cast< DataSetMetadata* >(object);
  (void)_this;
}
void DataSetMetadata::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DataSetMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DataSetMetadata& DataSetMetadata::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DataSetMetadata_data_5fmanager_2fdataset_2eproto.base);
  return *internal_default_instance();
}


void DataSetMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:mozc.DataSetMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DataSetMetadata::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .mozc.DataSetMetadata.Entry entries = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_entries(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DataSetMetadata::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mozc.DataSetMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mozc.DataSetMetadata.Entry entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_entries_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_entries(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mozc.DataSetMetadata)
  return target;
}

size_t DataSetMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mozc.DataSetMetadata)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .mozc.DataSetMetadata.Entry entries = 1;
  total_size += 1UL * this->_internal_entries_size();
  for (const auto& msg : this->entries_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataSetMetadata::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mozc.DataSetMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const DataSetMetadata* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DataSetMetadata>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mozc.DataSetMetadata)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mozc.DataSetMetadata)
    MergeFrom(*source);
  }
}

void DataSetMetadata::MergeFrom(const DataSetMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mozc.DataSetMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
}

void DataSetMetadata::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mozc.DataSetMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataSetMetadata::CopyFrom(const DataSetMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mozc.DataSetMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataSetMetadata::IsInitialized() const {
  return true;
}

void DataSetMetadata::InternalSwap(DataSetMetadata* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  entries_.InternalSwap(&other->entries_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DataSetMetadata::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace mozc
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::mozc::DataSetMetadata_Entry* Arena::CreateMaybeMessage< ::mozc::DataSetMetadata_Entry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mozc::DataSetMetadata_Entry >(arena);
}
template<> PROTOBUF_NOINLINE ::mozc::DataSetMetadata* Arena::CreateMaybeMessage< ::mozc::DataSetMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mozc::DataSetMetadata >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
